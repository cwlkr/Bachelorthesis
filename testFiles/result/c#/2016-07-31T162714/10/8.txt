namespace DotNetOpenAuth . OAuth2 { [ global : : System . Diagnostics . DebuggerNonUserCodeAttribute ( ) ] [ global : : System . ComponentModel . EditorBrowsableAttribute ( global : : System . ComponentModel . EditorBrowsableState . Advanced ) ] [ global : : System . ComponentModel . EditorBrowsableAttribute ( global : : System . ComponentModel . EditorBrowsableState . Advanced ) ] internal static string AccessScopeExceedsGrantScope { internal static string AccessTokenSigningKeyMissing { internal static string ClientCallbackDisallowed { internal static string ClientOrTokenSecretNotFound { internal static string ClientSecretMismatch { internal static string InvalidResourceOwnerPasswordCredential { internal static string NoCallback { namespace DotNetOpenAuth . OAuth2 { [ global : : System . Diagnostics . DebuggerNonUserCodeAttribute ( ) ] [ global : : System . ComponentModel . EditorBrowsableAttribute ( global : : System . ComponentModel . EditorBrowsableState . Advanced ) ] [ global : : System . ComponentModel . EditorBrowsableAttribute ( global : : System . ComponentModel . EditorBrowsableState . Advanced ) ] internal static string AccessScopeExceedsGrantScope { internal static string AccessTokenSigningKeyMissing { internal static string ClientCallbackDisallowed { internal static string ClientOrTokenSecretNotFound { internal static string ClientSecretMismatch { internal static string InvalidResourceOwnerPasswordCredential { internal static string NoCallback { namespace DotNetOpenAuth . OAuth2 { using System . Collections . Generic ; using System . Linq ; using System . Text ; using DotNetOpenAuth . Messaging ; private readonly string secret ; public ClientType ClientType { get ; protected set ; } public virtual bool HasNonEmptySecret { public virtual bool IsCallbackAllowed ( Uri callback ) { public virtual bool IsValidClientSecret ( string secret ) { 