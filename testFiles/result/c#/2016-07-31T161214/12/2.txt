private static global : : System . Resources . ResourceManager resourceMan ; private static global : : System . Globalization . CultureInfo resourceCulture ; internal static global : : System . Resources . ResourceManager ResourceManager { internal static global : : System . Globalization . CultureInfo Culture { return ResourceManager . GetString ( " AccessScopeExceedsGrantScope " , resourceCulture ) ; return ResourceManager . GetString ( " AccessTokenSigningKeyMissing " , resourceCulture ) ; return ResourceManager . GetString ( " ClientCallbackDisallowed " , resourceCulture ) ; return ResourceManager . GetString ( " ClientOrTokenSecretNotFound " , resourceCulture ) ; return ResourceManager . GetString ( " ClientSecretMismatch " , resourceCulture ) ; return ResourceManager . GetString ( " InvalidResourceOwnerPasswordCredential " , resourceCulture ) ; return ResourceManager . GetString ( " NoCallback " , resourceCulture ) ; private static global : : System . Resources . ResourceManager resourceMan ; private static global : : System . Globalization . CultureInfo resourceCulture ; internal static global : : System . Resources . ResourceManager ResourceManager { internal static global : : System . Globalization . CultureInfo Culture { return ResourceManager . GetString ( " AccessScopeExceedsGrantScope " , resourceCulture ) ; return ResourceManager . GetString ( " AccessTokenSigningKeyMissing " , resourceCulture ) ; return ResourceManager . GetString ( " ClientCallbackDisallowed " , resourceCulture ) ; return ResourceManager . GetString ( " ClientOrTokenSecretNotFound " , resourceCulture ) ; return ResourceManager . GetString ( " ClientSecretMismatch " , resourceCulture ) ; return ResourceManager . GetString ( " InvalidResourceOwnerPasswordCredential " , resourceCulture ) ; return ResourceManager . GetString ( " NoCallback " , resourceCulture ) ; using System . Collections . Generic ; public ClientDescription ( string secret , Uri defaultCallback ) { Requires . NotNullOrEmpty ( secret , " secret " ) ; Requires . NotNull ( defaultCallback , " defaultCallback " ) ; this . secret = secret ; this . DefaultCallback = defaultCallback ; this . ClientType = ClientType . Confidential ; Requires . NotNull ( defaultCallback , " defaultCallback " ) ; this . DefaultCallback = defaultCallback ; this . ClientType = ClientType . Public ; public Uri DefaultCallback { get ; protected set ; } public ClientType ClientType { get ; protected set ; } Requires . NotNullOrEmpty ( secret , " secret " ) ; 