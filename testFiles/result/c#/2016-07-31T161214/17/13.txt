/ / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / / / Changes to this file may cause incorrect behavior and will be lost if / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - namespace DotNetOpenAuth . OAuth2 { using System ; internal class AuthServerStrings { private static global : : System . Resources . ResourceManager resourceMan ; private static global : : System . Globalization . CultureInfo resourceCulture ; internal AuthServerStrings ( ) { } internal static global : : System . Resources . ResourceManager ResourceManager { get { if ( object . ReferenceEquals ( resourceMan , null ) ) { resourceMan = temp ; } return resourceMan ; } } internal static global : : System . Globalization . CultureInfo Culture { get { return resourceCulture ; } set { resourceCulture = value ; } } internal static string AccessScopeExceedsGrantScope { get { return ResourceManager . GetString ( " AccessScopeExceedsGrantScope " , resourceCulture ) ; } } internal static string AccessTokenSigningKeyMissing { get { return ResourceManager . GetString ( " AccessTokenSigningKeyMissing " , resourceCulture ) ; } } internal static string ClientCallbackDisallowed { get { return ResourceManager . GetString ( " ClientCallbackDisallowed " , resourceCulture ) ; } } internal static string ClientOrTokenSecretNotFound { get { return ResourceManager . GetString ( " ClientOrTokenSecretNotFound " , resourceCulture ) ; } } internal static string ClientSecretMismatch { get { return ResourceManager . GetString ( " ClientSecretMismatch " , resourceCulture ) ; } } internal static string InvalidResourceOwnerPasswordCredential { get { return ResourceManager . GetString ( " InvalidResourceOwnerPasswordCredential " , resourceCulture ) ; } } internal static string NoCallback { get { return ResourceManager . GetString ( " NoCallback " , resourceCulture ) ; } } } } / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / / / Changes to this file may cause incorrect behavior and will be lost if / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - namespace DotNetOpenAuth . OAuth2 { using System ; internal class AuthServerStrings { private static global : : System . Resources . ResourceManager resourceMan ; private static global : : System . Globalization . CultureInfo resourceCulture ; internal AuthServerStrings ( ) { } internal static global : : System . Resources . ResourceManager ResourceManager { get { if ( object . ReferenceEquals ( resourceMan , null ) ) { resourceMan = temp ; } return resourceMan ; } } internal static global : : System . Globalization . CultureInfo Culture { get { return resourceCulture ; } set { resourceCulture = value ; } } internal static string AccessScopeExceedsGrantScope { get { return ResourceManager . GetString ( " AccessScopeExceedsGrantScope " , resourceCulture ) ; } } internal static string AccessTokenSigningKeyMissing { get { return ResourceManager . GetString ( " AccessTokenSigningKeyMissing " , resourceCulture ) ; } } internal static string ClientCallbackDisallowed { get { return ResourceManager . GetString ( " ClientCallbackDisallowed " , resourceCulture ) ; } } internal static string ClientOrTokenSecretNotFound { get { return ResourceManager . GetString ( " ClientOrTokenSecretNotFound " , resourceCulture ) ; } } internal static string ClientSecretMismatch { get { return ResourceManager . GetString ( " ClientSecretMismatch " , resourceCulture ) ; } } internal static string InvalidResourceOwnerPasswordCredential { get { return ResourceManager . GetString ( " InvalidResourceOwnerPasswordCredential " , resourceCulture ) ; } } internal static string NoCallback { get { return ResourceManager . GetString ( " NoCallback " , resourceCulture ) ; } } } } / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - namespace DotNetOpenAuth . OAuth2 { using System ; using System . Collections . Generic ; using System . Linq ; using System . Text ; using DotNetOpenAuth . Messaging ; using Validation ; public class ClientDescription : IClientDescription { private readonly string secret ; public ClientDescription ( string secret , Uri defaultCallback ) { Requires . NotNullOrEmpty ( secret , " secret " ) ; Requires . NotNull ( defaultCallback , " defaultCallback " ) ; this . secret = secret ; this . DefaultCallback = defaultCallback ; this . ClientType = ClientType . Confidential ; } public ClientDescription ( Uri defaultCallback ) { Requires . NotNull ( defaultCallback , " defaultCallback " ) ; this . DefaultCallback = defaultCallback ; this . ClientType = ClientType . Public ; } protected ClientDescription ( ) { } # region IClientDescription Members / / / Gets or sets the callback to use when an individual authorization request public Uri DefaultCallback { get ; protected set ; } public ClientType ClientType { get ; protected set ; } public virtual bool HasNonEmptySecret { get { return ! string . IsNullOrEmpty ( this . secret ) ; } } public virtual bool IsCallbackAllowed ( Uri callback ) { return EqualityComparer < Uri > . Default . Equals ( this . DefaultCallback , callback ) ; } public virtual bool IsValidClientSecret ( string secret ) { Requires . NotNullOrEmpty ( secret , " secret " ) ; return MessagingUtilities . EqualsConstantTime ( secret , this . secret ) ; } # endregion } } 