/ / Runtime Version : 4 . 0 . 30319 . 18010 private static global : : System . Resources . ResourceManager resourceMan ; private static global : : System . Globalization . CultureInfo resourceCulture ; internal static global : : System . Resources . ResourceManager ResourceManager { if ( object . ReferenceEquals ( resourceMan , null ) ) { internal static global : : System . Globalization . CultureInfo Culture { return ResourceManager . GetString ( " AccessScopeExceedsGrantScope " , resourceCulture ) ; return ResourceManager . GetString ( " AccessTokenSigningKeyMissing " , resourceCulture ) ; return ResourceManager . GetString ( " ClientCallbackDisallowed " , resourceCulture ) ; return ResourceManager . GetString ( " ClientOrTokenSecretNotFound " , resourceCulture ) ; return ResourceManager . GetString ( " ClientSecretMismatch " , resourceCulture ) ; return ResourceManager . GetString ( " InvalidResourceOwnerPasswordCredential " , resourceCulture ) ; return ResourceManager . GetString ( " NoCallback " , resourceCulture ) ; / / Runtime Version : 4 . 0 . 30319 . 18010 private static global : : System . Resources . ResourceManager resourceMan ; private static global : : System . Globalization . CultureInfo resourceCulture ; internal static global : : System . Resources . ResourceManager ResourceManager { if ( object . ReferenceEquals ( resourceMan , null ) ) { internal static global : : System . Globalization . CultureInfo Culture { return ResourceManager . GetString ( " AccessScopeExceedsGrantScope " , resourceCulture ) ; return ResourceManager . GetString ( " AccessTokenSigningKeyMissing " , resourceCulture ) ; return ResourceManager . GetString ( " ClientCallbackDisallowed " , resourceCulture ) ; return ResourceManager . GetString ( " ClientOrTokenSecretNotFound " , resourceCulture ) ; return ResourceManager . GetString ( " ClientSecretMismatch " , resourceCulture ) ; return ResourceManager . GetString ( " InvalidResourceOwnerPasswordCredential " , resourceCulture ) ; return ResourceManager . GetString ( " NoCallback " , resourceCulture ) ; / / / The client ' s secret , if any . public ClientDescription ( string secret , Uri defaultCallback ) { Requires . NotNullOrEmpty ( secret , " secret " ) ; Requires . NotNull ( defaultCallback , " defaultCallback " ) ; Requires . NotNull ( defaultCallback , " defaultCallback " ) ; public Uri DefaultCallback { get ; protected set ; } public ClientType ClientType { get ; protected set ; } / / / < returns > < c > true < / c > if the secret matches the one in the authorization server ' s record for the client ; < c > false < / c > otherwise . < / returns > Requires . NotNullOrEmpty ( secret , " secret " ) ; return MessagingUtilities . EqualsConstantTime ( secret , this . secret ) ; 