* List of { @ link Criteria } objects . The List contains a Criteria object for each * this Menu is served in . If criteriaSet or mensas are empty , an empty list is returned . * List of { @ link Mensa } s you want to match the criterias with . public List < Criteria > match ( Set < String > criteriaSet , List < Mensa > mensas ) { if ( ( menu . getDescription ( ) . toLowerCase ( Locale . getDefault ( ) ) ) . contains ( criteria * Receives BootUpComplete Broadcast and sets an { @ link AlarmManager } with * an Intent for the { @ link AlarmReceiver } . Its actions depend on the tenOClock . set ( Calendar . YEAR , Calendar . MONTH , Calendar . DAY _ OF _ MONTH , 10 , 0 , 0 ) ; AlarmManager alarm = ( AlarmManager ) context . getSystemService ( Context . ALARM _ SERVICE ) ; PendingIntent operation = PendingIntent . getBroadcast ( context , 0 , new Intent ( context , AlarmReceiver . class ) , alarm . setInexactRepeating ( AlarmManager . RTC , tenOClock . getTimeInMillis ( ) , AlarmManager . INTERVAL _ DAY , private static final CharSequence MESSAGE _ GET _ DATA = " lade . . . " ; protected static final String MENSA _ ID _ KEY = " ch . xonix . mensa . unibe : : mensa _ ID " ; protected static final String MENSA _ NAME _ KEY = " ch . xonix . mensa . unibe : : mensa _ name " ; mensaListView = ( ListView ) this . findViewById ( R . id . mensa _ list ) ; Toast . makeText ( Main . this , MESSAGE _ GET _ DATA , Toast . LENGTH _ SHORT ) . show ( ) ; public void onItemClick ( AdapterView < ? > parent , View view , int pos , / / getMenuInflater ( ) . inflate ( R . menu . main , menu ) ; invitedList = ( ListView ) view . findViewById ( R . id . invited _ list ) ; TextView showMessage = ( TextView ) view . findViewById ( R . id . show _ message ) ; Toast . makeText ( getActivity ( ) , R . string . toast _ refreshing _ msg , Toast . LENGTH _ SHORT ) . show ( ) ; intent . setFlags ( Intent . FLAG _ ACTIVITY _ SINGLE _ TOP | Intent . FLAG _ ACTIVITY _ CLEAR _ TOP ) ; 