* List of { @ link Criteria } objects . The List contains a Criteria object for each * Criteria object with all the Menus the String is matching and the mensas * this Menu is served in . If criteriaSet or mensas are empty , an empty list is returned . * @ return List of Criteria Objects which stores the matching menus and the public List < Criteria > match ( Set < String > criteriaSet , List < Mensa > mensas ) { if ( ( menu . getDescription ( ) . toLowerCase ( Locale . getDefault ( ) ) ) . contains ( criteria tenOClock . set ( Calendar . YEAR , Calendar . MONTH , Calendar . DAY _ OF _ MONTH , 10 , 0 , 0 ) ; AlarmManager alarm = ( AlarmManager ) context . getSystemService ( Context . ALARM _ SERVICE ) ; alarm . setInexactRepeating ( AlarmManager . RTC , tenOClock . getTimeInMillis ( ) , AlarmManager . INTERVAL _ DAY , private static final CharSequence MESSAGE _ GET _ DATA = " lade . . . " ; protected static final String MENSA _ ID _ KEY = " ch . xonix . mensa . unibe : : mensa _ ID " ; protected static final String MENSA _ NAME _ KEY = " ch . xonix . mensa . unibe : : mensa _ name " ; mensaListView = ( ListView ) this . findViewById ( R . id . mensa _ list ) ; / / make aysnc request to get a list of all canteens Toast . makeText ( Main . this , MESSAGE _ GET _ DATA , Toast . LENGTH _ SHORT ) . show ( ) ; intent . putExtra ( MENSA _ ID _ KEY , mensa . getId ( ) ) ; intent . putExtra ( MENSA _ NAME _ KEY , mensa . getName ( ) ) ; / / Inflate the menu ; this adds items to the action bar if it is present . / / getMenuInflater ( ) . inflate ( R . menu . main , menu ) ; * This simple abstract class has the functionality which is common for both View view = inflater . inflate ( R . layout . fragment _ invited , null ) ; invitedList = ( ListView ) view . findViewById ( R . id . invited _ list ) ; TextView showMessage = ( TextView ) view . findViewById ( R . id . show _ message ) ; showMessage . setText ( R . string . not _ loged _ in ) ; inflater . inflate ( R . menu . invitations _ menu , menu ) ; Toast . makeText ( getActivity ( ) , R . string . toast _ refreshing _ msg , Toast . LENGTH _ SHORT ) . show ( ) ; * Listener which sets the viability of a view from visible to gone and vice versa * starts the normal app and opens it at the invited tab . intent . setFlags ( Intent . FLAG _ ACTIVITY _ SINGLE _ TOP | Intent . FLAG _ ACTIVITY _ CLEAR _ TOP ) ; 