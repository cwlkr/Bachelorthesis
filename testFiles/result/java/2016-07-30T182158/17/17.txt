* Matches a Set of criteria to each { @ link Menu } of the current day and returns a * List of { @ link Criteria } objects . The List contains a Criteria object for each * this Menu is served in . If criteriaSet or mensas are empty , an empty list is returned . * Is either criteriaSet or mensas are null a { @ link NullPointerException } may be thrown . * List of { @ link Mensa } s you want to match the criterias with . public List < Criteria > match ( Set < String > criteriaSet , List < Mensa > mensas ) { DailyMenuplan daily = weekly . getDailymenuplan ( Day . today ( ) ) ; if ( ( menu . getDescription ( ) . toLowerCase ( Locale . getDefault ( ) ) ) . contains ( criteria if ( ! crit . getMap ( ) . containsKey ( menu ) ) { * an Intent for the { @ link AlarmReceiver } . Its actions depend on the * predefined values made in the Settings , if there are now settings made , Calendar tenOClock = Calendar . getInstance ( Locale . getDefault ( ) ) ; AlarmManager alarm = ( AlarmManager ) context . getSystemService ( Context . ALARM _ SERVICE ) ; PendingIntent operation = PendingIntent . getBroadcast ( context , 0 , new Intent ( context , AlarmReceiver . class ) , alarm . setInexactRepeating ( AlarmManager . RTC , tenOClock . getTimeInMillis ( ) , AlarmManager . INTERVAL _ DAY , private static final CharSequence MESSAGE _ GET _ DATA = " lade . . . " ; android . R . layout . simple _ list _ item _ 1 ) ; mensaListView = ( ListView ) this . findViewById ( R . id . mensa _ list ) ; public void onItemClick ( AdapterView < ? > parent , View view , int pos , Intent intent = new Intent ( Main . this , MenuplanActivity . class ) ; intent . putExtra ( MENSA _ ID _ KEY , mensa . getId ( ) ) ; intent . putExtra ( MENSA _ NAME _ KEY , mensa . getName ( ) ) ; / / getMenuInflater ( ) . inflate ( R . menu . main , menu ) ; View view = inflater . inflate ( R . layout . fragment _ invited , null ) ; invitedList = ( ListView ) view . findViewById ( R . id . invited _ list ) ; TextView showMessage = ( TextView ) view . findViewById ( R . id . show _ message ) ; showMessage . setText ( R . string . not _ loged _ in ) ; inflater . inflate ( R . menu . invitations _ menu , menu ) ; * This activity is just used as a callback for the push notifications . It public static final String SHOW _ INVITES = " showInvites " ; 