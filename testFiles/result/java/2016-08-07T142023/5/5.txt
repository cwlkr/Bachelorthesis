container = new ArrayList < Criteria > ( ) ; temp = new ArrayList < Mensa > ( ) ; * Matches a Set of criteria to each { @ link Menu } of the current day and returns a * matching criteria of the criteriaSet . The Algorithm also fills this * this Menu is served in . If criteriaSet or mensas are empty , an empty list is returned . * Is either criteriaSet or mensas are null a { @ link NullPointerException } may be thrown . * String set of criterias you want to match with . * List of { @ link Mensa } s you want to match the criterias with . * mensa in which the menu is served in . for ( String criteria : criteriaSet ) { for ( Mensa mensa : mensas ) { if ( daily ! = null ) { for ( Menu menu : daily . getMenus ( ) ) { if ( ! container . contains ( crit ) ) temp = new ArrayList < Mensa > ( ) ; temp = new ArrayList < Mensa > ( ) ; * Receives BootUpComplete Broadcast and sets an { @ link AlarmManager } with * an Intent for the { @ link AlarmReceiver } . Its actions depend on the * predefined values made in the Settings , if there are now settings made , * it does nothing else it sets an daily repeating AlarmManager , starting public void onReceive ( Context context , Intent intent ) { SharedPrefsHandler pref = new SharedPrefsHandler ( context ) ; private static final CharSequence MESSAGE _ GET _ DATA = " lade . . . " ; new MensasRequest ( mensaListAdapter ) . execute ( ) ; mensaListView . setOnItemClickListener ( new OnItemClickListener ( ) { / / Inflate the menu ; this adds items to the action bar if it is present . * Invited and Sent Invites Fragment . public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { ( ( DrawerMenuActivity ) getActivity ( ) ) . createInvitation ( ) ; SocialManager . getInstance ( ) . loadInvites ( ) ; SocialManager . getInstance ( ) . removeObserver ( adapter ) ; if ( menuItem ! = null ) { public ToggleListener ( View toToggle , Context ctx ) { * This activity is just used as a callback for the push notifications . It * starts the normal app and opens it at the invited tab . public static final String SHOW _ INVITES = " showInvites " ; 