* List of { @ link Criteria } objects . The List contains a Criteria object for each * Is either criteriaSet or mensas are null a { @ link NullPointerException } may be thrown . * List of { @ link Mensa } s you want to match the criterias with . if ( ! crit . getMap ( ) . containsKey ( menu ) ) { * an Intent for the { @ link AlarmReceiver } . Its actions depend on the * predefined values made in the Settings , if there are now settings made , AlarmManager alarm = ( AlarmManager ) context . getSystemService ( Context . ALARM _ SERVICE ) ; private static final CharSequence MESSAGE _ GET _ DATA = " lade . . . " ; android . R . layout . simple _ list _ item _ 1 ) ; mensaListView = ( ListView ) this . findViewById ( R . id . mensa _ list ) ; public void onItemClick ( AdapterView < ? > parent , View view , int pos , Intent intent = new Intent ( Main . this , MenuplanActivity . class ) ; intent . putExtra ( MENSA _ ID _ KEY , mensa . getId ( ) ) ; intent . putExtra ( MENSA _ NAME _ KEY , mensa . getName ( ) ) ; / / Inflate the menu ; this adds items to the action bar if it is present . / / getMenuInflater ( ) . inflate ( R . menu . main , menu ) ; View view = inflater . inflate ( R . layout . fragment _ invited , null ) ; invitedList = ( ListView ) view . findViewById ( R . id . invited _ list ) ; showMessage . setText ( R . string . not _ loged _ in ) ; inflater . inflate ( R . menu . invitations _ menu , menu ) ; * Listener which sets the viability of a view from visible to gone and vice versa * This activity is just used as a callback for the push notifications . It 