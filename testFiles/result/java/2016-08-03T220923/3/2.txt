import java . util . ArrayList ; import java . util . List ; import java . util . Locale ; import java . util . Set ; private List < Criteria > container ; private List < Mensa > temp ; public CriteriaMatcher ( ) { container = new ArrayList < Criteria > ( ) ; temp = new ArrayList < Mensa > ( ) ; * List of { @ link Criteria } objects . The List contains a Criteria object for each * List of { @ link Mensa } s you want to match the criterias with . for ( String criteria : criteriaSet ) { Criteria crit = new Criteria ( ) ; crit . setCriteriaName ( criteria ) ; for ( Mensa mensa : mensas ) { if ( daily ! = null ) { container . add ( crit ) ; temp = new ArrayList < Mensa > ( ) ; temp . add ( mensa ) ; crit . getMap ( ) . put ( menu , temp ) ; temp = new ArrayList < Mensa > ( ) ; temp = crit . getMap ( ) . get ( menu ) ; temp . add ( mensa ) ; import java . util . Calendar ; import java . util . Locale ; import android . app . AlarmManager ; import android . app . PendingIntent ; import android . content . BroadcastReceiver ; import android . content . Context ; import android . content . Intent ; public void onReceive ( Context context , Intent intent ) { SharedPrefsHandler pref = new SharedPrefsHandler ( context ) ; if ( pref . getDoNotification ( ) ) { tenOClock . set ( Calendar . YEAR , Calendar . MONTH , Calendar . DAY _ OF _ MONTH , 10 , 0 , 0 ) ; AlarmManager alarm = ( AlarmManager ) context . getSystemService ( Context . ALARM _ SERVICE ) ; PendingIntent . FLAG _ CANCEL _ CURRENT ) ; alarm . setInexactRepeating ( AlarmManager . RTC , tenOClock . getTimeInMillis ( ) , AlarmManager . INTERVAL _ DAY , import android . app . Activity ; import android . content . Intent ; import android . os . Bundle ; import android . view . Menu ; import android . view . View ; import android . widget . AdapterView ; import android . widget . ArrayAdapter ; import android . widget . ListView ; import android . widget . Toast ; private static final CharSequence MESSAGE _ GET _ DATA = " lade . . . " ; protected static final String MENSA _ ID _ KEY = " ch . xonix . mensa . unibe : : mensa _ ID " ; protected static final String MENSA _ NAME _ KEY = " ch . xonix . mensa . unibe : : mensa _ name " ; private ArrayAdapter < Mensa > mensaListAdapter ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity _ main ) ; mensaListAdapter = new ArrayAdapter < Mensa > ( this , android . R . layout . simple _ list _ item _ 1 ) ; mensaListView . setAdapter ( mensaListAdapter ) ; Toast . makeText ( Main . this , MESSAGE _ GET _ DATA , Toast . LENGTH _ SHORT ) . show ( ) ; new MensasRequest ( mensaListAdapter ) . execute ( ) ; mensaListView . setOnItemClickListener ( new OnItemClickListener ( ) { public void onItemClick ( AdapterView < ? > parent , View view , int pos , long arg3 ) { Mensa mensa = ( Mensa ) parent . getItemAtPosition ( pos ) ; Intent intent = new Intent ( Main . this , MenuplanActivity . class ) ; intent . putExtra ( MENSA _ ID _ KEY , mensa . getId ( ) ) ; intent . putExtra ( MENSA _ NAME _ KEY , mensa . getName ( ) ) ; Main . this . startActivity ( intent ) ; public boolean onCreateOptionsMenu ( Menu menu ) { / / getMenuInflater ( ) . inflate ( R . menu . main , menu ) ; package com . ese2013 . mub ; import android . os . Bundle ; import android . view . LayoutInflater ; import android . view . Menu ; import android . view . MenuInflater ; import android . view . MenuItem ; import android . view . View ; import android . view . ViewGroup ; import android . widget . ListView ; import android . widget . TextView ; import android . widget . Toast ; public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState ) { adapter = createAdapter ( ) ; setUpEmptyView ( view ) ; invitedList . setAdapter ( adapter ) ; setHasOptionsMenu ( true ) ; protected abstract InvitationsBaseAdapter createAdapter ( ) ; protected void setUpEmptyView ( View view ) { TextView showMessage = ( TextView ) view . findViewById ( R . id . show _ message ) ; if ( LoginService . isLoggedIn ( ) ) showMessage . setText ( R . string . no _ invites ) ; showMessage . setText ( R . string . not _ loged _ in ) ; invitedList . setEmptyView ( showMessage ) ; public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { if ( LoginService . isLoggedIn ( ) ) inflater . inflate ( R . menu . invitations _ menu , menu ) ; public boolean onOptionsItemSelected ( MenuItem item ) { switch ( item . getItemId ( ) ) { ( ( DrawerMenuActivity ) getActivity ( ) ) . createInvitation ( ) ; case R . id . refresh : SocialManager . getInstance ( ) . loadInvites ( ) ; menuItem = item ; menuItem . setActionView ( R . layout . progress _ bar ) ; menuItem . expandActionView ( ) ; Toast . makeText ( getActivity ( ) , R . string . toast _ refreshing _ msg , Toast . LENGTH _ SHORT ) . show ( ) ; public void onDestroy ( ) { super . onDestroy ( ) ; SocialManager . getInstance ( ) . removeObserver ( adapter ) ; protected void loadingFinished ( ) { if ( menuItem ! = null ) { menuItem . collapseActionView ( ) ; menuItem . setActionView ( null ) ; package com . ese2013 . mub ; import android . content . Context ; import android . view . View ; public ToggleListener ( View toToggle , Context ctx ) { this . toToggle = toToggle ; this . ctx = ctx ; public void onClick ( View v ) { if ( toToggle . isShown ( ) ) { ToggleAnimation . slide _ up ( ctx , toToggle ) ; toToggle . setVisibility ( View . GONE ) ; ToggleAnimation . slide _ down ( ctx , toToggle ) ; toToggle . setVisibility ( View . VISIBLE ) ; package com . ese2013 . mub ; import android . app . Activity ; import android . content . Intent ; import android . os . Bundle ; public static final String SHOW _ INVITES = " showInvites " ; protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; Intent intent = new Intent ( this , DrawerMenuActivity . class ) ; intent . putExtra ( SHOW _ INVITES , true ) ; intent . setFlags ( Intent . FLAG _ ACTIVITY _ SINGLE _ TOP | Intent . FLAG _ ACTIVITY _ CLEAR _ TOP ) ; startActivity ( intent ) ; 