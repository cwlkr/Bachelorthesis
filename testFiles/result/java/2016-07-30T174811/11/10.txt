* Matches a Set of criteria to each { @ link Menu } of the current day and returns a * List of { @ link Criteria } objects . The List contains a Criteria object for each * matching criteria of the criteriaSet . The Algorithm also fills this * Criteria object with all the Menus the String is matching and the mensas * this Menu is served in . If criteriaSet or mensas are empty , an empty list is returned . * Is either criteriaSet or mensas are null a { @ link NullPointerException } may be thrown . * String set of criterias you want to match with . * List of { @ link Mensa } s you want to match the criterias with . * @ return List of Criteria Objects which stores the matching menus and the * mensa in which the menu is served in . public List < Criteria > match ( Set < String > criteriaSet , List < Mensa > mensas ) { for ( Mensa mensa : mensas ) { if ( daily ! = null ) { for ( Menu menu : daily . getMenus ( ) ) { if ( ( menu . getDescription ( ) . toLowerCase ( Locale . getDefault ( ) ) ) . contains ( criteria . toLowerCase ( Locale . getDefault ( ) ) ) ) { if ( ! container . contains ( crit ) ) if ( ! crit . getMap ( ) . containsKey ( menu ) ) { * an Intent for the { @ link AlarmReceiver } . Its actions depend on the mensaListAdapter = new ArrayAdapter < Mensa > ( this , 