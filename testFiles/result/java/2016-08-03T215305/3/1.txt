/ * * * * This class works the CriteriaMatcher Algoritm and ensures * / public class CriteriaMatcher { } / * * * Matches a Set of criteria to each { @ link Menu } of the current day and returns a * matching criteria of the criteriaSet . The Algorithm also fills this * Criteria object with all the Menus the String is matching and the mensas * this Menu is served in . If criteriaSet or mensas are empty , an empty list is returned . * Is either criteriaSet or mensas are null a { @ link NullPointerException } may be thrown . * * @ param criteriaSet * String set of criterias you want to match with . * @ param mensas * List of { @ link Mensa } s you want to match the criterias with . * @ return List of Criteria Objects which stores the matching menus and the * mensa in which the menu is served in . * / } else { } } } } } } return container ; } } public class BootReceiver extends BroadcastReceiver { / * * * Receives BootUpComplete Broadcast and sets an { @ link AlarmManager } with * an Intent for the { @ link AlarmReceiver } . Its actions depend on the * predefined values made in the Settings , if there are now settings made , * it does nothing else it sets an daily repeating AlarmManager , starting * the AlarmReceiver . * / @ Override operation ) ; } } } public class Main extends Activity { private ListView mensaListView ; @ Override / / create a array adapter / / make aysnc request to get a list of all canteens / / ad OnItemClickListener @ Override long arg3 ) { } } ) ; } @ Override / / Inflate the menu ; this adds items to the action bar if it is present . return true ; } } / * * * This simple abstract class has the functionality which is common for both * Invited and Sent Invites Fragment . * / public abstract class AbstractInvitationsFragment extends Fragment { private ListView invitedList ; private InvitationsBaseAdapter adapter ; private MenuItem menuItem ; @ Override return view ; } else } @ Override } @ Override return true ; return true ; default : return false ; } } @ Override } / * * * changes the progressbar in the ActionBar back to not loading * / } } } / * * * * Listener which sets the viability of a view from visible to gone and vice versa * * / public class ToggleListener implements OnClickListener { private View toToggle ; private Context ctx ; } @ Override } else { } } } / * * * This activity is just used as a callback for the push notifications . It * starts the normal app and opens it at the invited tab . * / public class PushNotificationCallbackActivity extends Activity { @ Override } } } } package ch . xonix . mensa . unibe ; import ch . xonix . mensa . unibe . model . Mensa ; import ch . xonix . mensa . unibe . request . MensasRequest ; import android . app . Activity ; import android . content . Intent ; import android . os . Bundle ; import android . view . Menu ; import android . view . View ; import android . widget . AdapterView ; import android . widget . AdapterView . OnItemClickListener ; import android . widget . ArrayAdapter ; import android . widget . ListView ; import android . widget . Toast ; private ArrayAdapter < Mensa > mensaListAdapter ; @ Override mensaListView = ( ListView ) this . findViewById ( R . id . mensa _ list ) ; new MensasRequest ( mensaListAdapter ) . execute ( ) ; @ Override long arg3 ) { } } ) ; } @ Override return true ; } } package com . ese2013 . mub ; import com . ese2013 . mub . social . LoginService ; import com . ese2013 . mub . social . SocialManager ; import android . os . Bundle ; import android . support . v4 . app . Fragment ; import android . view . LayoutInflater ; import android . view . Menu ; import android . view . MenuInflater ; import android . view . MenuItem ; import android . view . View ; import android . view . ViewGroup ; import android . widget . ListView ; import android . widget . TextView ; import android . widget . Toast ; / * * * This simple abstract class has the functionality which is common for both * Invited and Sent Invites Fragment . public abstract class AbstractInvitationsFragment extends Fragment { @ Override View view = inflater . inflate ( R . layout . fragment _ invited , null ) ; invitedList = ( ListView ) view . findViewById ( R . id . invited _ list ) ; return view ; } protected abstract InvitationsBaseAdapter createAdapter ( ) ; else } @ Override } @ Override case R . id . new _ invite _ button : return true ; case R . id . refresh : return true ; return false ; } } @ Override } / * * * changes the progressbar in the ActionBar back to not loading } } } package com . ese2013 . mub ; import android . content . Context ; import android . view . View ; import android . view . View . OnClickListener ; / * * * * Listener which sets the viability of a view from visible to gone and vice versa * public ToggleListener ( View toToggle , Context ctx ) { } @ Override } } } } package com . ese2013 . mub ; import android . app . Activity ; import android . content . Intent ; import android . os . Bundle ; / * * * This activity is just used as a callback for the push notifications . It * starts the normal app and opens it at the invited tab . @ Override } } 