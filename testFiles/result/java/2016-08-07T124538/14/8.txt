package com . ese2013 . mub . service ; import java . util . ArrayList ; import java . util . List ; import java . util . Locale ; import java . util . Set ; import com . ese2013 . mub . model . DailyMenuplan ; import com . ese2013 . mub . model . Day ; import com . ese2013 . mub . model . Mensa ; import com . ese2013 . mub . model . Menu ; import com . ese2013 . mub . model . WeeklyMenuplan ; / * * * * This class works the CriteriaMatcher Algoritm and ensures * / public class CriteriaMatcher { private List < Criteria > container ; private List < Mensa > temp ; public CriteriaMatcher ( ) { } / * * * Criteria object with all the Menus the String is matching and the mensas * * @ param criteriaSet * @ param mensas * @ return List of Criteria Objects which stores the matching menus and the * / public List < Criteria > match ( Set < String > criteriaSet , List < Mensa > mensas ) { crit . setCriteriaName ( criteria ) ; WeeklyMenuplan weekly = mensa . getMenuplan ( ) ; DailyMenuplan daily = weekly . getDailymenuplan ( Day . today ( ) ) ; . toLowerCase ( Locale . getDefault ( ) ) ) ) { container . add ( crit ) ; temp . add ( mensa ) ; } else { temp . add ( mensa ) ; } } } } } } return container ; } } package com . ese2013 . mub . service ; import java . util . Calendar ; import java . util . Locale ; import android . app . AlarmManager ; import android . app . PendingIntent ; import android . content . BroadcastReceiver ; import android . content . Context ; import android . content . Intent ; import com . ese2013 . mub . util . SharedPrefsHandler ; public class BootReceiver extends BroadcastReceiver { / * * * / @ Override if ( pref . getDoNotification ( ) ) { Calendar tenOClock = Calendar . getInstance ( Locale . getDefault ( ) ) ; tenOClock . set ( Calendar . YEAR , Calendar . MONTH , Calendar . DAY _ OF _ MONTH , 10 , 0 , 0 ) ; PendingIntent . FLAG _ CANCEL _ CURRENT ) ; operation ) ; } } } package ch . xonix . mensa . unibe ; import ch . xonix . mensa . unibe . model . Mensa ; import ch . xonix . mensa . unibe . request . MensasRequest ; import android . app . Activity ; import android . content . Intent ; import android . os . Bundle ; import android . view . Menu ; import android . view . View ; import android . widget . AdapterView ; import android . widget . AdapterView . OnItemClickListener ; import android . widget . ArrayAdapter ; import android . widget . ListView ; import android . widget . Toast ; public class Main extends Activity { private ListView mensaListView ; private ArrayAdapter < Mensa > mensaListAdapter ; @ Override super . onCreate ( savedInstanceState ) ; setContentView ( R . layout . activity _ main ) ; / / create a array adapter android . R . layout . simple _ list _ item _ 1 ) ; mensaListView . setAdapter ( mensaListAdapter ) ; / / make aysnc request to get a list of all canteens / / ad OnItemClickListener @ Override long arg3 ) { intent . putExtra ( MENSA _ ID _ KEY , mensa . getId ( ) ) ; intent . putExtra ( MENSA _ NAME _ KEY , mensa . getName ( ) ) ; Main . this . startActivity ( intent ) ; } } ) ; } @ Override return true ; } } package com . ese2013 . mub ; import com . ese2013 . mub . social . LoginService ; import com . ese2013 . mub . social . SocialManager ; import android . os . Bundle ; import android . support . v4 . app . Fragment ; import android . view . LayoutInflater ; import android . view . Menu ; import android . view . MenuInflater ; import android . view . MenuItem ; import android . view . View ; import android . view . ViewGroup ; import android . widget . ListView ; import android . widget . TextView ; import android . widget . Toast ; / * * * This simple abstract class has the functionality which is common for both * / public abstract class AbstractInvitationsFragment extends Fragment { private ListView invitedList ; private InvitationsBaseAdapter adapter ; private MenuItem menuItem ; @ Override adapter = createAdapter ( ) ; View view = inflater . inflate ( R . layout . fragment _ invited , null ) ; setUpEmptyView ( view ) ; invitedList . setAdapter ( adapter ) ; setHasOptionsMenu ( true ) ; return view ; } protected abstract InvitationsBaseAdapter createAdapter ( ) ; if ( LoginService . isLoggedIn ( ) ) showMessage . setText ( R . string . no _ invites ) ; else showMessage . setText ( R . string . not _ loged _ in ) ; invitedList . setEmptyView ( showMessage ) ; } @ Override if ( LoginService . isLoggedIn ( ) ) inflater . inflate ( R . menu . invitations _ menu , menu ) ; } @ Override switch ( item . getItemId ( ) ) { case R . id . new _ invite _ button : return true ; case R . id . refresh : menuItem = item ; menuItem . setActionView ( R . layout . progress _ bar ) ; menuItem . expandActionView ( ) ; return true ; default : return false ; } } @ Override public void onDestroy ( ) { super . onDestroy ( ) ; } / * * * changes the progressbar in the ActionBar back to not loading * / protected void loadingFinished ( ) { menuItem . collapseActionView ( ) ; menuItem . setActionView ( null ) ; } } } package com . ese2013 . mub ; import android . content . Context ; import android . view . View ; import android . view . View . OnClickListener ; / * * * * Listener which sets the viability of a view from visible to gone and vice versa * * / public class ToggleListener implements OnClickListener { private View toToggle ; private Context ctx ; this . toToggle = toToggle ; this . ctx = ctx ; } @ Override if ( toToggle . isShown ( ) ) { ToggleAnimation . slide _ up ( ctx , toToggle ) ; toToggle . setVisibility ( View . GONE ) ; } else { ToggleAnimation . slide _ down ( ctx , toToggle ) ; toToggle . setVisibility ( View . VISIBLE ) ; } } } package com . ese2013 . mub ; import android . app . Activity ; import android . content . Intent ; import android . os . Bundle ; / * * * / public class PushNotificationCallbackActivity extends Activity { @ Override super . onCreate ( savedInstanceState ) ; intent . putExtra ( SHOW _ INVITES , true ) ; intent . setFlags ( Intent . FLAG _ ACTIVITY _ SINGLE _ TOP | Intent . FLAG _ ACTIVITY _ CLEAR _ TOP ) ; startActivity ( intent ) ; } } 