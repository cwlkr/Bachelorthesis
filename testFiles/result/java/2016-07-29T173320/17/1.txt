import com . ese2013 . mub . model . DailyMenuplan ; import com . ese2013 . mub . model . Day ; import com . ese2013 . mub . model . Mensa ; import com . ese2013 . mub . model . Menu ; import com . ese2013 . mub . model . WeeklyMenuplan ; container = new ArrayList < Criteria > ( ) ; temp = new ArrayList < Mensa > ( ) ; * matching criteria of the criteriaSet . The Algorithm also fills this * String set of criterias you want to match with . * mensa in which the menu is served in . for ( Menu menu : daily . getMenus ( ) ) { . toLowerCase ( Locale . getDefault ( ) ) ) ) { if ( ! container . contains ( crit ) ) temp = new ArrayList < Mensa > ( ) ; crit . getMap ( ) . put ( menu , temp ) ; temp = new ArrayList < Mensa > ( ) ; temp = crit . getMap ( ) . get ( menu ) ; import com . ese2013 . mub . util . SharedPrefsHandler ; * Receives BootUpComplete Broadcast and sets an { @ link AlarmManager } with * it does nothing else it sets an daily repeating AlarmManager , starting public void onReceive ( Context context , Intent intent ) { import ch . xonix . mensa . unibe . model . Mensa ; import ch . xonix . mensa . unibe . request . MensasRequest ; setContentView ( R . layout . activity _ main ) ; mensaListAdapter = new ArrayAdapter < Mensa > ( this , / / make aysnc request to get a list of all canteens new MensasRequest ( mensaListAdapter ) . execute ( ) ; Mensa mensa = ( Mensa ) parent . getItemAtPosition ( pos ) ; import com . ese2013 . mub . social . LoginService ; import com . ese2013 . mub . social . SocialManager ; import android . support . v4 . app . Fragment ; * This simple abstract class has the functionality which is common for both showMessage . setText ( R . string . no _ invites ) ; public void onCreateOptionsMenu ( Menu menu , MenuInflater inflater ) { case R . id . new _ invite _ button : ( ( DrawerMenuActivity ) getActivity ( ) ) . createInvitation ( ) ; SocialManager . getInstance ( ) . loadInvites ( ) ; menuItem . setActionView ( R . layout . progress _ bar ) ; SocialManager . getInstance ( ) . removeObserver ( adapter ) ; * changes the progressbar in the ActionBar back to not loading public ToggleListener ( View toToggle , Context ctx ) { ToggleAnimation . slide _ up ( ctx , toToggle ) ; ToggleAnimation . slide _ down ( ctx , toToggle ) ; * starts the normal app and opens it at the invited tab . public static final String SHOW _ INVITES = " showInvites " ; Intent intent = new Intent ( this , DrawerMenuActivity . class ) ; intent . putExtra ( SHOW _ INVITES , true ) ; 