mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; const std : : size _ t functions = symbolDatabase - > functionScopes . size ( ) ; const ValueType * const returnType = tok - > astOperand1 ( ) - > valueType ( ) ; " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " they are of different width . In worst case you end up assigning 64 - bit address to 32 - bit integer . The safe " " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " they are of different width . In worst case you end up assigning 64 - bit integer to 32 - bit pointer . The safe " " Returning an address value in a function with integer return type is not portable . \ n " " to 32 - bit integer . The safe way is to always return an integer . " , CWE758 , false ) ; " Returning an integer in a function with pointer return type is not portable . \ n " " The safe way is to always return a pointer . " , CWE758 , false ) ; 