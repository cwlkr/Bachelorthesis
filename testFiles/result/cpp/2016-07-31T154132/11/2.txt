connect ( mUI . mButtonBrowse , SIGNAL ( clicked ( ) ) , this , SLOT ( Browse ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( accepted ( ) ) , this , SLOT ( Ok ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( rejected ( ) ) , this , SLOT ( reject ( ) ) ) ; mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; connect ( mUI . mButtonBrowse , SIGNAL ( clicked ( ) ) , this , SLOT ( Browse ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( accepted ( ) ) , this , SLOT ( Ok ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( rejected ( ) ) , this , SLOT ( reject ( ) ) ) ; mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; if ( ! _ settings - > isEnabled ( " portability " ) ) const std : : size _ t functions = symbolDatabase - > functionScopes . size ( ) ; for ( std : : size _ t i = 0 ; i < functions ; + + i ) { if ( scope - > function = = 0 | | ! scope - > function - > hasBody ( ) ) / / We only look for functions with a body if ( tok - > str ( ) = = " { " ) { if ( tok - > str ( ) ! = " return " ) if ( ! tok - > astOperand1 ( ) | | tok - > astOperand1 ( ) - > isNumber ( ) ) for ( std : : size _ t i = 0 ; i < functions ; + + i ) { if ( tok - > str ( ) ! = " = " ) const ValueType * lhstype = tok - > astOperand1 ( ) ? tok - > astOperand1 ( ) - > valueType ( ) : nullptr ; const ValueType * rhstype = tok - > astOperand2 ( ) ? tok - > astOperand2 ( ) - > valueType ( ) : nullptr ; 