* Cppcheck - A tool for static C / C + + code analysis mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; * Cppcheck - A tool for static C / C + + code analysis mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; * Cppcheck - A tool for static C / C + + code analysis if ( ! _ settings - > isEnabled ( " portability " ) ) const SymbolDatabase * symbolDatabase = _ tokenizer - > getSymbolDatabase ( ) ; const std : : size _ t functions = symbolDatabase - > functionScopes . size ( ) ; if ( tok - > str ( ) = = " { " ) { if ( tok - > str ( ) ! = " return " ) const ValueType * const returnType = tok - > astOperand1 ( ) - > valueType ( ) ; if ( ! retPointer & & returnType - > pointer > = 1U ) if ( tok - > str ( ) ! = " = " ) ! tok - > astOperand2 ( ) - > isNumber ( ) & & rhstype - > type = = ValueType : : Type : : INT ) lhstype - > type = = ValueType : : Type : : INT ) void Check64BitPortability : : assignmentAddressToIntegerError ( const Token * tok ) void Check64BitPortability : : assignmentIntegerToAddressError ( const Token * tok ) void Check64BitPortability : : returnPointerError ( const Token * tok ) void Check64BitPortability : : returnIntegerError ( const Token * tok ) 