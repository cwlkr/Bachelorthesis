* along with this program . If not , see < http : / / www . gnu . org / licenses / > . if ( mUI . mName - > text ( ) . isEmpty ( ) | | mUI . mPath - > text ( ) . isEmpty ( ) ) { mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; * along with this program . If not , see < http : / / www . gnu . org / licenses / > . if ( mUI . mName - > text ( ) . isEmpty ( ) | | mUI . mPath - > text ( ) . isEmpty ( ) ) { mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; * along with this program . If not , see < http : / / www . gnu . org / licenses / > . for ( std : : size _ t i = 0 ; i < functions ; + + i ) { if ( tok - > str ( ) = = " { " ) { for ( std : : size _ t i = 0 ; i < functions ; + + i ) { for ( const Token * tok = scope - > classStart ; tok & & tok ! = scope - > classEnd ; tok = tok - > next ( ) ) { " Assigning a pointer to an integer ( int / long / etc ) is not portable across different platforms and " " The safe way is to always return a pointer . " , CWE758 , false ) ; 