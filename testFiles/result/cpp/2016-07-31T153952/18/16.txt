* Cppcheck - A tool for static C / C + + code analysis * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * Cppcheck - A tool for static C / C + + code analysis * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * Cppcheck - A tool for static C / C + + code analysis * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . " Assigning a pointer to an integer is not portable . \ n " " Assigning an integer to a pointer is not portable . \ n " " Assigning an integer ( int / long / etc ) to a pointer is not portable across different platforms and " " Returning an address value in a function with integer ( int / long / etc ) return type is not portable across " " Returning an integer ( int / long / etc ) in a function with pointer return type is not portable across different " " and Linux they are of different width . In worst case you end up casting 64 - bit integer down to 32 - bit pointer . " " The safe way is to always return a pointer . " , CWE758 , false ) ; 