mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; if ( mUI . mName - > text ( ) . isEmpty ( ) | | mUI . mPath - > text ( ) . isEmpty ( ) ) { mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; if ( mUI . mName - > text ( ) . isEmpty ( ) | | mUI . mPath - > text ( ) . isEmpty ( ) ) { mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - for ( std : : size _ t i = 0 ; i < functions ; + + i ) { if ( tok - > str ( ) = = " { " ) { if ( tok - > scope ( ) - > type = = Scope : : ScopeType : : eFunction | | tok - > scope ( ) - > type = = Scope : : ScopeType : : eLambda ) if ( tok - > str ( ) ! = " return " ) for ( std : : size _ t i = 0 ; i < functions ; + + i ) { if ( tok - > str ( ) ! = " = " ) 