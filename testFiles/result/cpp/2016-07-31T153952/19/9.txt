/ * * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * * You should have received a copy of the GNU General Public License * / { } { / / dtor } { / / so it does not make sense to show everything . } } { } else { } } / * * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * * You should have received a copy of the GNU General Public License * / { } { / / dtor } { / / so it does not make sense to show everything . } } { } else { } } / * * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * * You should have received a copy of the GNU General Public License * / / / CWE ids used } { / / Check return values ; / / skip nested functions } } } / / Check assignments } } } { " Assigning a pointer to an integer is not portable . \ n " " Assigning a pointer to an integer ( int / long / etc ) is not portable across different platforms and " } { " Assigning an integer to a pointer is not portable . \ n " } { " Returning an address value in a function with integer return type is not portable . \ n " " different platforms and compilers . For example in 32 - bit Windows and Linux they are same width , but in " " 64 - bit Windows and Linux they are of different width . In worst case you end up casting 64 - bit address down " } { " Returning an integer in a function with pointer return type is not portable . \ n " " The safe way is to always return a pointer . " , CWE758 , false ) ; } 