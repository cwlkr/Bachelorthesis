* Cppcheck - A tool for static C / C + + code analysis * along with this program . If not , see < http : / / www . gnu . org / licenses / > . * Cppcheck - A tool for static C / C + + code analysis * along with this program . If not , see < http : / / www . gnu . org / licenses / > . * Cppcheck - A tool for static C / C + + code analysis * along with this program . If not , see < http : / / www . gnu . org / licenses / > . " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " they are of different width . In worst case you end up assigning 64 - bit address to 32 - bit integer . The safe " " way is to store addresses only in pointer types ( or typedefs like uintptr _ t ) . " , CWE758 , false ) ; " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " they are of different width . In worst case you end up assigning 64 - bit integer to 32 - bit pointer . The safe " " way is to store addresses only in pointer types ( or typedefs like uintptr _ t ) . " , CWE758 , false ) ; " different platforms and compilers . For example in 32 - bit Windows and Linux they are same width , but in " " to 32 - bit integer . The safe way is to always return an integer . " , CWE758 , false ) ; " platforms and compilers . For example in 32 - bit Windows and Linux they are same width , but in 64 - bit Windows " " and Linux they are of different width . In worst case you end up casting 64 - bit integer down to 32 - bit pointer . " 