* along with this program . If not , see < http : / / www . gnu . org / licenses / > . if ( mUI . mName - > text ( ) . isEmpty ( ) | | mUI . mPath - > text ( ) . isEmpty ( ) ) { mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; * along with this program . If not , see < http : / / www . gnu . org / licenses / > . if ( mUI . mName - > text ( ) . isEmpty ( ) | | mUI . mPath - > text ( ) . isEmpty ( ) ) { mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; * along with this program . If not , see < http : / / www . gnu . org / licenses / > . for ( std : : size _ t i = 0 ; i < functions ; + + i ) { for ( std : : size _ t i = 0 ; i < functions ; + + i ) { " way is to store addresses only in pointer types ( or typedefs like uintptr _ t ) . " , CWE758 , false ) ; " way is to store addresses only in pointer types ( or typedefs like uintptr _ t ) . " , CWE758 , false ) ; " to 32 - bit integer . The safe way is to always return an integer . " , CWE758 , false ) ; 