else if ( Token : : Match ( scope - > function - > token - > previous ( ) , " int | long | DWORD " ) ) / / Function returns an integer for ( const Token * tok = scope - > classStart - > next ( ) ; tok ! = scope - > classEnd ; tok = tok - > next ( ) ) { for ( const Token * tok = scope - > classStart ; tok & & tok ! = scope - > classEnd ; tok = tok - > next ( ) ) { " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " they are of different width . In worst case you end up assigning 64 - bit address to 32 - bit integer . The safe " " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " they are of different width . In worst case you end up assigning 64 - bit integer to 32 - bit pointer . The safe " " 64 - bit Windows and Linux they are of different width . In worst case you end up casting 64 - bit address down " " to 32 - bit integer . The safe way is to always return an integer . " , CWE758 , false ) ; " platforms and compilers . For example in 32 - bit Windows and Linux they are same width , but in 64 - bit Windows " 