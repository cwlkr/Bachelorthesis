/ * * * it under the terms of the GNU General Public License as published by * * This program is distributed in the hope that it will be useful , * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License * / { } { / / dtor } { / / so it does not make sense to show everything . } } { } } / * * * it under the terms of the GNU General Public License as published by * * This program is distributed in the hope that it will be useful , * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License * / { } { / / dtor } { / / so it does not make sense to show everything . } } { } } / * * * it under the terms of the GNU General Public License as published by * * This program is distributed in the hope that it will be useful , * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License * / / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / CWE ids used namespace { } { return ; / / Check return values continue ; ; else continue ; / / skip nested functions } continue ; continue ; continue ; } } / / Check assignments continue ; continue ; } } } { " Assigning a pointer to an integer is not portable . \ n " " they are of different width . In worst case you end up assigning 64 - bit address to 32 - bit integer . The safe " } { " Assigning an integer to a pointer is not portable . \ n " " they are of different width . In worst case you end up assigning 64 - bit integer to 32 - bit pointer . The safe " } { " Returning an address value in a function with integer return type is not portable . \ n " } { " Returning an integer in a function with pointer return type is not portable . \ n " } 