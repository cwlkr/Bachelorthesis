ApplicationDialog : : ApplicationDialog ( const QString & title , QWidget * parent ) : QDialog ( parent ) , mUI . setupUi ( this ) ; connect ( mUI . mButtonBrowse , SIGNAL ( clicked ( ) ) , this , SLOT ( Browse ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( accepted ( ) ) , this , SLOT ( Ok ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( rejected ( ) ) , this , SLOT ( reject ( ) ) ) ; mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; setWindowTitle ( title ) ; GetPath ( SETTINGS _ LAST _ APP _ PATH ) , SetPath ( SETTINGS _ LAST _ APP _ PATH , selectedFile ) ; mUI . mPath - > setText ( path ) ; msg . exec ( ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; ApplicationDialog : : ApplicationDialog ( const QString & title , QWidget * parent ) : QDialog ( parent ) , mUI . setupUi ( this ) ; connect ( mUI . mButtonBrowse , SIGNAL ( clicked ( ) ) , this , SLOT ( Browse ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( accepted ( ) ) , this , SLOT ( Ok ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( rejected ( ) ) , this , SLOT ( reject ( ) ) ) ; mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; setWindowTitle ( title ) ; GetPath ( SETTINGS _ LAST _ APP _ PATH ) , SetPath ( SETTINGS _ LAST _ APP _ PATH , selectedFile ) ; mUI . mPath - > setText ( path ) ; msg . exec ( ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; if ( ! _ settings - > isEnabled ( " portability " ) ) if ( tok - > str ( ) = = " { " ) { tok = tok - > link ( ) ; if ( tok - > str ( ) ! = " return " ) if ( retPointer & & returnType - > pointer = = 0U ) returnIntegerError ( tok ) ; returnPointerError ( tok ) ; if ( tok - > str ( ) ! = " = " ) if ( lhstype - > pointer > = 1U & & assignmentIntegerToAddressError ( tok ) ; if ( rhstype - > pointer > = 1U & & assignmentAddressToIntegerError ( tok ) ; reportError ( tok , Severity : : portability , reportError ( tok , Severity : : portability , reportError ( tok , Severity : : portability , reportError ( tok , Severity : : portability , 