* Copyright ( C ) 2007 - 2016 Cppcheck team . # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " void ApplicationDialog : : Browse ( ) # endif / / Q _ OS _ WIN if ( ! selectedFile . isEmpty ( ) ) { void ApplicationDialog : : Ok ( ) QMessageBox msg ( QMessageBox : : Warning , tr ( " Cppcheck " ) , * Copyright ( C ) 2007 - 2016 Cppcheck team . # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " void ApplicationDialog : : Browse ( ) # endif / / Q _ OS _ WIN if ( ! selectedFile . isEmpty ( ) ) { void ApplicationDialog : : Ok ( ) QMessageBox msg ( QMessageBox : : Warning , tr ( " Cppcheck " ) , * Copyright ( C ) 2007 - 2016 Cppcheck team . # include " check64bit . h " # include " symboldatabase . h " void Check64BitPortability : : pointerassignment ( ) const SymbolDatabase * symbolDatabase = _ tokenizer - > getSymbolDatabase ( ) ; const std : : size _ t functions = symbolDatabase - > functionScopes . size ( ) ; const Scope * scope = symbolDatabase - > functionScopes [ i ] ; bool retPointer = false ; if ( ! retPointer & & returnType - > pointer > = 1U ) const Scope * scope = symbolDatabase - > functionScopes [ i ] ; if ( ! lhstype | | ! rhstype ) ! tok - > astOperand2 ( ) - > isNumber ( ) & & rhstype - > originalTypeName . empty ( ) & & lhstype - > originalTypeName . empty ( ) & & void Check64BitPortability : : assignmentAddressToIntegerError ( const Token * tok ) " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " void Check64BitPortability : : assignmentIntegerToAddressError ( const Token * tok ) " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " void Check64BitPortability : : returnPointerError ( const Token * tok ) void Check64BitPortability : : returnIntegerError ( const Token * tok ) 