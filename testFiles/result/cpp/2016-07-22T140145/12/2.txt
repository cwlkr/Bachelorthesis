* Copyright ( C ) 2007 - 2016 Cppcheck team . # include " applicationdialog . h " # include " application . h " # include " common . h " QString selectedFile = QFileDialog : : getOpenFileName ( this , if ( ! selectedFile . isEmpty ( ) ) { QString path ( QDir : : toNativeSeparators ( selectedFile ) ) ; QMessageBox msg ( QMessageBox : : Warning , tr ( " Cppcheck " ) , * Copyright ( C ) 2007 - 2016 Cppcheck team . # include " applicationdialog . h " # include " application . h " # include " common . h " QString selectedFile = QFileDialog : : getOpenFileName ( this , if ( ! selectedFile . isEmpty ( ) ) { QString path ( QDir : : toNativeSeparators ( selectedFile ) ) ; QMessageBox msg ( QMessageBox : : Warning , tr ( " Cppcheck " ) , * Copyright ( C ) 2007 - 2016 Cppcheck team . # include " check64bit . h " # include " symboldatabase . h " const SymbolDatabase * symbolDatabase = _ tokenizer - > getSymbolDatabase ( ) ; const Scope * scope = symbolDatabase - > functionScopes [ i ] ; const Scope * scope = symbolDatabase - > functionScopes [ i ] ; if ( ! lhstype | | ! rhstype ) rhstype - > originalTypeName . empty ( ) & & lhstype - > originalTypeName . empty ( ) & & " Assigning an integer ( int / long / etc ) to a pointer is not portable across different platforms and " " Returning an integer ( int / long / etc ) in a function with pointer return type is not portable across different " 