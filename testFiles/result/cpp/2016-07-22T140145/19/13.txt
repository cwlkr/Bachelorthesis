mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; GetPath ( SETTINGS _ LAST _ APP _ PATH ) , SetPath ( SETTINGS _ LAST _ APP _ PATH , selectedFile ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; GetPath ( SETTINGS _ LAST _ APP _ PATH ) , SetPath ( SETTINGS _ LAST _ APP _ PATH , selectedFile ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; if ( ! _ settings - > isEnabled ( " portability " ) ) for ( std : : size _ t i = 0 ; i < functions ; + + i ) { if ( tok - > str ( ) = = " { " ) { if ( tok - > str ( ) ! = " return " ) if ( retPointer & & returnType - > pointer = = 0U ) if ( ! retPointer & & returnType - > pointer > = 1U ) for ( std : : size _ t i = 0 ; i < functions ; + + i ) { if ( tok - > str ( ) ! = " = " ) if ( lhstype - > pointer > = 1U & & ! tok - > astOperand2 ( ) - > isNumber ( ) & & rhstype - > type = = ValueType : : Type : : INT ) if ( rhstype - > pointer > = 1U & & lhstype - > type = = ValueType : : Type : : INT ) 