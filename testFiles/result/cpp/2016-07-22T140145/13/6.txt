* Copyright ( C ) 2007 - 2016 Cppcheck team . # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " / / In Windows ( almost ) all executables have . exe extension QString selectedFile = QFileDialog : : getOpenFileName ( this , QString path ( QDir : : toNativeSeparators ( selectedFile ) ) ; QMessageBox msg ( QMessageBox : : Warning , tr ( " Cppcheck " ) , * Copyright ( C ) 2007 - 2016 Cppcheck team . # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " / / In Windows ( almost ) all executables have . exe extension QString selectedFile = QFileDialog : : getOpenFileName ( this , QString path ( QDir : : toNativeSeparators ( selectedFile ) ) ; QMessageBox msg ( QMessageBox : : Warning , tr ( " Cppcheck " ) , * Copyright ( C ) 2007 - 2016 Cppcheck team . # include " check64bit . h " # include " symboldatabase . h " const Scope * scope = symbolDatabase - > functionScopes [ i ] ; const Scope * scope = symbolDatabase - > functionScopes [ i ] ; " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " Assigning an integer ( int / long / etc ) to a pointer is not portable across different platforms and " " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " Returning an integer ( int / long / etc ) in a function with pointer return type is not portable across different " " platforms and compilers . For example in 32 - bit Windows and Linux they are same width , but in 64 - bit Windows " 