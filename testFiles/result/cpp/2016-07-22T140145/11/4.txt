/ * * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * * This program is distributed in the hope that it will be useful , * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License * / # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " { } { / / dtor } { / / In Windows ( almost ) all executables have . exe extension / / so it does not make sense to show everything . } } { } else { } } / * * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * * This program is distributed in the hope that it will be useful , * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License * / # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " { } { / / dtor } { / / In Windows ( almost ) all executables have . exe extension / / so it does not make sense to show everything . } } { } else { } } / * * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * * This program is distributed in the hope that it will be useful , * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License * / # include " check64bit . h " # include " symboldatabase . h " / / CWE ids used / / Register this check class ( by creating a static instance of it ) } { / / Check return values ; / / skip nested functions } } } / / Check assignments / / Assign integer to pointer . . / / Assign pointer to integer . . } } } { " AssignmentAddressToInteger " , " Assigning a pointer to an integer is not portable . \ n " " Assigning a pointer to an integer ( int / long / etc ) is not portable across different platforms and " " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " they are of different width . In worst case you end up assigning 64 - bit address to 32 - bit integer . The safe " } { " AssignmentIntegerToAddress " , " Assigning an integer to a pointer is not portable . \ n " " Assigning an integer ( int / long / etc ) to a pointer is not portable across different platforms and " " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " they are of different width . In worst case you end up assigning 64 - bit integer to 32 - bit pointer . The safe " } { " CastAddressToIntegerAtReturn " , " Returning an address value in a function with integer return type is not portable . \ n " " Returning an address value in a function with integer ( int / long / etc ) return type is not portable across " " 64 - bit Windows and Linux they are of different width . In worst case you end up casting 64 - bit address down " } { " CastIntegerToAddressAtReturn " , " Returning an integer in a function with pointer return type is not portable . \ n " " Returning an integer ( int / long / etc ) in a function with pointer return type is not portable across different " " platforms and compilers . For example in 32 - bit Windows and Linux they are same width , but in 64 - bit Windows " " and Linux they are of different width . In worst case you end up casting 64 - bit integer down to 32 - bit pointer . " } 