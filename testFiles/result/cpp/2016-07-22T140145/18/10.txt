* Cppcheck - A tool for static C / C + + code analysis * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation , either version 3 of the License , or * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " { } { } { } } { } else { } } * Cppcheck - A tool for static C / C + + code analysis * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation , either version 3 of the License , or * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " { } { } { } } { } else { } } * Cppcheck - A tool for static C / C + + code analysis * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation , either version 3 of the License , or * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License # include " check64bit . h " # include " symboldatabase . h " } { ; } } } } } } { " Assigning a pointer to an integer is not portable . \ n " " Assigning a pointer to an integer ( int / long / etc ) is not portable across different platforms and " " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " } { " Assigning an integer to a pointer is not portable . \ n " " Assigning an integer ( int / long / etc ) to a pointer is not portable across different platforms and " " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " } { " Returning an address value in a function with integer return type is not portable . \ n " " different platforms and compilers . For example in 32 - bit Windows and Linux they are same width , but in " " 64 - bit Windows and Linux they are of different width . In worst case you end up casting 64 - bit address down " } { " Returning an integer in a function with pointer return type is not portable . \ n " " Returning an integer ( int / long / etc ) in a function with pointer return type is not portable across different " " platforms and compilers . For example in 32 - bit Windows and Linux they are same width , but in 64 - bit Windows " } 