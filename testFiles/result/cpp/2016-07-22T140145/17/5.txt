* * it under the terms of the GNU General Public License as published by * the Free Software Foundation , either version 3 of the License , or * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License { } { } { } } { } } * * it under the terms of the GNU General Public License as published by * the Free Software Foundation , either version 3 of the License , or * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License { } { } { } } { } } * * it under the terms of the GNU General Public License as published by * the Free Software Foundation , either version 3 of the License , or * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License } { ; } } } } } } { } { } { " Returning an address value in a function with integer return type is not portable . \ n " " different platforms and compilers . For example in 32 - bit Windows and Linux they are same width , but in " } { " Returning an integer in a function with pointer return type is not portable . \ n " } 