* Copyright ( C ) 2007 - 2016 Cppcheck team . # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " # endif / / Q _ OS _ WIN QString selectedFile = QFileDialog : : getOpenFileName ( this , QMessageBox msg ( QMessageBox : : Warning , } else { * Copyright ( C ) 2007 - 2016 Cppcheck team . # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " # endif / / Q _ OS _ WIN QString selectedFile = QFileDialog : : getOpenFileName ( this , QMessageBox msg ( QMessageBox : : Warning , } else { * Copyright ( C ) 2007 - 2016 Cppcheck team . # include " check64bit . h " # include " symboldatabase . h " const Scope * scope = symbolDatabase - > functionScopes [ i ] ; bool retPointer = false ; const Scope * scope = symbolDatabase - > functionScopes [ i ] ; " AssignmentAddressToInteger " , " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " AssignmentIntegerToAddress " , " compilers . For example in 32 - bit Windows and linux they are same width , but in 64 - bit Windows and linux " " CastAddressToIntegerAtReturn " , " 64 - bit Windows and Linux they are of different width . In worst case you end up casting 64 - bit address down " " to 32 - bit integer . The safe way is to always return an integer . " , CWE758 , false ) ; " CastIntegerToAddressAtReturn " , 