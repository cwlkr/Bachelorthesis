ApplicationDialog : : ApplicationDialog ( const QString & title , mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; filter + = tr ( " Executable files ( * . exe ) ; ; All files ( * . * ) " ) ; QString selectedFile = QFileDialog : : getOpenFileName ( this , GetPath ( SETTINGS _ LAST _ APP _ PATH ) , QString path ( QDir : : toNativeSeparators ( selectedFile ) ) ; mUI . mPath - > setText ( path ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; ApplicationDialog : : ApplicationDialog ( const QString & title , mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; filter + = tr ( " Executable files ( * . exe ) ; ; All files ( * . * ) " ) ; QString selectedFile = QFileDialog : : getOpenFileName ( this , GetPath ( SETTINGS _ LAST _ APP _ PATH ) , QString path ( QDir : : toNativeSeparators ( selectedFile ) ) ; mUI . mPath - > setText ( path ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; static const struct CWE CWE758 ( 758U ) ; / / Reliance on Undefined , Unspecified , or Implementation - Defined Behavior if ( ! _ settings - > isEnabled ( " portability " ) ) const SymbolDatabase * symbolDatabase = _ tokenizer - > getSymbolDatabase ( ) ; const Scope * scope = symbolDatabase - > functionScopes [ i ] ; if ( tok - > str ( ) ! = " return " ) const ValueType * const returnType = tok - > astOperand1 ( ) - > valueType ( ) ; if ( retPointer & & returnType - > pointer = = 0U ) if ( ! retPointer & & returnType - > pointer > = 1U ) const Scope * scope = symbolDatabase - > functionScopes [ i ] ; if ( lhstype - > pointer > = 1U & & rhstype - > type = = ValueType : : Type : : INT ) if ( rhstype - > pointer > = 1U & & lhstype - > type = = ValueType : : Type : : INT ) void Check64BitPortability : : assignmentAddressToIntegerError ( const Token * tok ) reportError ( tok , Severity : : portability , void Check64BitPortability : : assignmentIntegerToAddressError ( const Token * tok ) reportError ( tok , Severity : : portability , void Check64BitPortability : : returnPointerError ( const Token * tok ) reportError ( tok , Severity : : portability , void Check64BitPortability : : returnIntegerError ( const Token * tok ) reportError ( tok , Severity : : portability , 