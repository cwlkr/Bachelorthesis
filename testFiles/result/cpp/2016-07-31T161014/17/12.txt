* This program is free software : you can redistribute it and / or modify * ( at your option ) any later version . # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # ifdef Q _ OS _ WIN / / Convert possible native ( Windows ) path to internal presentation format * This program is free software : you can redistribute it and / or modify * ( at your option ) any later version . # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # ifdef Q _ OS _ WIN / / Convert possible native ( Windows ) path to internal presentation format * This program is free software : you can redistribute it and / or modify * ( at your option ) any later version . / / Register this check class ( by creating a static instance of it ) " Assigning a pointer to an integer is not portable . \ n " " Assigning a pointer to an integer ( int / long / etc ) is not portable across different platforms and " " way is to store addresses only in pointer types ( or typedefs like uintptr _ t ) . " , CWE758 , false ) ; " Assigning an integer to a pointer is not portable . \ n " " Assigning an integer ( int / long / etc ) to a pointer is not portable across different platforms and " " way is to store addresses only in pointer types ( or typedefs like uintptr _ t ) . " , CWE758 , false ) ; " Returning an address value in a function with integer return type is not portable . \ n " " Returning an address value in a function with integer ( int / long / etc ) return type is not portable across " " Returning an integer in a function with pointer return type is not portable . \ n " " Returning an integer ( int / long / etc ) in a function with pointer return type is not portable across different " 