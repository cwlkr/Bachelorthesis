ApplicationDialog : : ApplicationDialog ( const QString & title , connect ( mUI . mButtonBrowse , SIGNAL ( clicked ( ) ) , this , SLOT ( Browse ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( accepted ( ) ) , this , SLOT ( Ok ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( rejected ( ) ) , this , SLOT ( reject ( ) ) ) ; mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; filter + = tr ( " Executable files ( * . exe ) ; ; All files ( * . * ) " ) ; QString selectedFile = QFileDialog : : getOpenFileName ( this , GetPath ( SETTINGS _ LAST _ APP _ PATH ) , SetPath ( SETTINGS _ LAST _ APP _ PATH , selectedFile ) ; QString path ( QDir : : toNativeSeparators ( selectedFile ) ) ; mUI . mPath - > setText ( path ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; ApplicationDialog : : ApplicationDialog ( const QString & title , connect ( mUI . mButtonBrowse , SIGNAL ( clicked ( ) ) , this , SLOT ( Browse ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( accepted ( ) ) , this , SLOT ( Ok ( ) ) ) ; connect ( mUI . mButtons , SIGNAL ( rejected ( ) ) , this , SLOT ( reject ( ) ) ) ; mUI . mPath - > setText ( app . getPath ( ) ) ; mUI . mName - > setText ( app . getName ( ) ) ; mUI . mParameters - > setText ( app . getParameters ( ) ) ; filter + = tr ( " Executable files ( * . exe ) ; ; All files ( * . * ) " ) ; QString selectedFile = QFileDialog : : getOpenFileName ( this , GetPath ( SETTINGS _ LAST _ APP _ PATH ) , SetPath ( SETTINGS _ LAST _ APP _ PATH , selectedFile ) ; QString path ( QDir : : toNativeSeparators ( selectedFile ) ) ; mUI . mPath - > setText ( path ) ; mApplication . setName ( mUI . mName - > text ( ) ) ; mApplication . setPath ( QDir : : fromNativeSeparators ( mUI . mPath - > text ( ) ) ) ; mApplication . setParameters ( mUI . mParameters - > text ( ) ) ; static const struct CWE CWE758 ( 758U ) ; / / Reliance on Undefined , Unspecified , or Implementation - Defined Behavior if ( ! _ settings - > isEnabled ( " portability " ) ) const SymbolDatabase * symbolDatabase = _ tokenizer - > getSymbolDatabase ( ) ; const std : : size _ t functions = symbolDatabase - > functionScopes . size ( ) ; for ( std : : size _ t i = 0 ; i < functions ; + + i ) { const Scope * scope = symbolDatabase - > functionScopes [ i ] ; if ( scope - > function = = 0 | | ! scope - > function - > hasBody ( ) ) / / We only look for functions with a body if ( scope - > function - > token - > strAt ( - 1 ) = = " * " ) / / Function returns a pointer if ( tok - > str ( ) ! = " return " ) if ( ! tok - > astOperand1 ( ) | | tok - > astOperand1 ( ) - > isNumber ( ) ) const ValueType * const returnType = tok - > astOperand1 ( ) - > valueType ( ) ; if ( retPointer & & returnType - > pointer = = 0U ) if ( ! retPointer & & returnType - > pointer > = 1U ) for ( std : : size _ t i = 0 ; i < functions ; + + i ) { const Scope * scope = symbolDatabase - > functionScopes [ i ] ; const ValueType * lhstype = tok - > astOperand1 ( ) ? tok - > astOperand1 ( ) - > valueType ( ) : nullptr ; const ValueType * rhstype = tok - > astOperand2 ( ) ? tok - > astOperand2 ( ) - > valueType ( ) : nullptr ; if ( lhstype - > pointer > = 1U & & rhstype - > type = = ValueType : : Type : : INT ) if ( rhstype - > pointer > = 1U & & lhstype - > type = = ValueType : : Type : : INT ) void Check64BitPortability : : assignmentAddressToIntegerError ( const Token * tok ) reportError ( tok , Severity : : portability , void Check64BitPortability : : assignmentIntegerToAddressError ( const Token * tok ) reportError ( tok , Severity : : portability , void Check64BitPortability : : returnPointerError ( const Token * tok ) reportError ( tok , Severity : : portability , void Check64BitPortability : : returnIntegerError ( const Token * tok ) reportError ( tok , Severity : : portability , 