* Cppcheck - A tool for static C / C + + code analysis * Copyright ( C ) 2007 - 2016 Cppcheck team . * This program is free software : you can redistribute it and / or modify * the Free Software Foundation , either version 3 of the License , or * ( at your option ) any later version . # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " # ifdef Q _ OS _ WIN / / In Windows ( almost ) all executables have . exe extension # endif / / Q _ OS _ WIN / / Convert possible native ( Windows ) path to internal presentation format * Cppcheck - A tool for static C / C + + code analysis * Copyright ( C ) 2007 - 2016 Cppcheck team . * This program is free software : you can redistribute it and / or modify * the Free Software Foundation , either version 3 of the License , or * ( at your option ) any later version . # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " # ifdef Q _ OS _ WIN / / In Windows ( almost ) all executables have . exe extension # endif / / Q _ OS _ WIN / / Convert possible native ( Windows ) path to internal presentation format * Cppcheck - A tool for static C / C + + code analysis * Copyright ( C ) 2007 - 2016 Cppcheck team . * This program is free software : you can redistribute it and / or modify * the Free Software Foundation , either version 3 of the License , or * ( at your option ) any later version . # include " check64bit . h " # include " symboldatabase . h " / / Register this check class ( by creating a static instance of it ) ! tok - > astOperand2 ( ) - > isNumber ( ) & & " Assigning a pointer to an integer is not portable . \ n " " Assigning an integer to a pointer is not portable . \ n " " Returning an address value in a function with integer return type is not portable . \ n " " 64 - bit Windows and Linux they are of different width . In worst case you end up casting 64 - bit address down " " Returning an integer in a function with pointer return type is not portable . \ n " " The safe way is to always return a pointer . " , CWE758 , false ) ; 