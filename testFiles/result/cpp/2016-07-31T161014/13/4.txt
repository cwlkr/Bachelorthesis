/ * * Cppcheck - A tool for static C / C + + code analysis * Copyright ( C ) 2007 - 2016 Cppcheck team . * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation , either version 3 of the License , or * ( at your option ) any later version . * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License * / # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " { } { / / dtor } { # ifdef Q _ OS _ WIN / / In Windows ( almost ) all executables have . exe extension / / so it does not make sense to show everything . # endif / / Q _ OS _ WIN } } { } else { / / Convert possible native ( Windows ) path to internal presentation format } } / * * Cppcheck - A tool for static C / C + + code analysis * Copyright ( C ) 2007 - 2016 Cppcheck team . * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation , either version 3 of the License , or * ( at your option ) any later version . * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License * / # include < QString > # include < QWidget > # include < QDialog > # include < QFileDialog > # include < QMessageBox > # include " applicationdialog . h " # include " application . h " # include " common . h " { } { / / dtor } { # ifdef Q _ OS _ WIN / / In Windows ( almost ) all executables have . exe extension / / so it does not make sense to show everything . # endif / / Q _ OS _ WIN } } { } else { / / Convert possible native ( Windows ) path to internal presentation format } } / * * Cppcheck - A tool for static C / C + + code analysis * Copyright ( C ) 2007 - 2016 Cppcheck team . * * This program is free software : you can redistribute it and / or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation , either version 3 of the License , or * ( at your option ) any later version . * * This program is distributed in the hope that it will be useful , * but WITHOUT ANY WARRANTY ; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the * GNU General Public License for more details . * * You should have received a copy of the GNU General Public License * / / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / 64 - bit portability / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - # include " check64bit . h " # include " symboldatabase . h " / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - / / CWE ids used / / Register this check class ( by creating a static instance of it ) } { / / Check return values ; / / skip nested functions } } } / / Check assignments / / Assign integer to pointer . . ! tok - > astOperand2 ( ) - > isNumber ( ) & & / / Assign pointer to integer . . } } } { " AssignmentAddressToInteger " , " Assigning a pointer to an integer is not portable . \ n " } { " AssignmentIntegerToAddress " , " Assigning an integer to a pointer is not portable . \ n " } { " CastAddressToIntegerAtReturn " , " Returning an address value in a function with integer return type is not portable . \ n " " 64 - bit Windows and Linux they are of different width . In worst case you end up casting 64 - bit address down " } { " CastIntegerToAddressAtReturn " , " Returning an integer in a function with pointer return type is not portable . \ n " " The safe way is to always return a pointer . " , CWE758 , false ) ; } 