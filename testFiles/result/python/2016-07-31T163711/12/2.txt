card = rfidiot . card print " Couldn ' t open reader ! " os . _ exit ( True ) args = rfidiot . args if len ( args ) = = 1 : if card . select ( ) : print ' Card ID : ' + card . uid if card . errorcode : print ' No card present ' os . _ exit ( True ) os . _ exit ( False ) card = rfidiot . card print " Couldn ' t open reader ! " os . _ exit ( True ) card . select ( ) print ' \ nID : ' + card . uid print ' Reading : ' card . select ( ) for x in range ( 98 ) : if card . readblock ( x ) : sys . stdout . flush ( ) if x = = 0 : if x > 0 : print ' \ nRead % d blocks ' % x targettype = card . tagtype card . waitfortag ( ' Waiting for blank tag . . . ' ) print ' ID : ' + card . uid if card . tagtype ! = targettype : if not card . readblock ( 0 ) : os . _ exit ( False ) print ' Writing : ' for n in range ( x ) : sys . stdout . flush ( ) print ' \ nWrite failed ! ' print ' \ n Verifying : ' for n in range ( x ) : print ' \ nVerify failed ! ' os . _ exit ( True ) print ' OK \ r ' , sys . stdout . flush ( ) os . _ exit ( False ) print ' No data ! ' os . _ exit ( True ) card = rfidiot . card print " Couldn ' t open reader ! " os . _ exit ( False ) args = rfidiot . args card = rfidiot . card print " Couldn ' t open reader ! " os . _ exit ( True ) while address < 0xf0 : card = rfidiot . card os . _ exit ( True ) args = rfidiot . args help = rfidiot . help if not help and ( len ( args ) = = 1 or len ( args ) = = 2 ) : print " Decode : " if len ( args ) = = 2 : if args [ 1 ] = = ' WRITE ' : os . _ exit ( True ) os . _ exit ( False ) if not help and ( len ( args ) > = 3 or precoded ) : id = args [ 0 ] print " Encode : " , print ' binary is ' , out if ( len ( args ) = = 4 and args [ 3 ] = = ' WRITE ' ) or precoded : card . select ( ) card . waitfortag ( ' Waiting for blank tag . . . ' ) print ' Tag ID : ' + card . data if x = = ' N ' : os . _ exit ( False ) if x = = ' Y ' : print ' Q5 Control Block : ' , q5control = ' 6000F0E8 ' print ' Hitag2 Control Block : ' , print outhex [ x ] if writetag = = True : outhex [ 0 ] = q5control outhex [ 0 ] = h2control if x = = offset : print ' Done ! ' card . select ( ) print ' Card ID : ' + card . data print ' Write failed ! ' os . _ exit ( True ) if x = = offset : print ' Done ! ' card . reset ( ) card . select ( ) print ' Card ID : ' + card . data print outhex [ x - offset ] os . _ exit ( False ) print ' \ t ( normally based on ISO - 3166 country codes or ICAR . ORG manufacturer codes , range 0 - 4095 ) ' print ' \ tand a decimal National ID Number will generate a 16 HEX digit ID . ' os . _ exit ( True ) 