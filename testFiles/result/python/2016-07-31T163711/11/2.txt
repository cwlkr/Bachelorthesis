print ' Block % 02x : % s \ r ' % ( x , card . data ) , print ' Wrong blocksize ! ( % d / % d ) ' % ( len ( buffer [ 0 ] ) , len ( card . data ) ) , if string . upper ( raw _ input ( ' * * * Warning ! Data will be overwritten ! Continue ( y / n ) ? ' ) ) = = ' Y ' : print ' Block % 02x : % s \ r ' % ( n , buffer [ n ] ) , print ' Block % 02x : % s ' % ( n , buffer [ n ] ) , if not card . readblock ( n ) or card . data ! = buffer [ n ] : print card . demotag ( card . DT _ SET _ UID , card . ToBinary ( args [ 0 ] ) ) print ' address % 02x : \ t % s ' % ( address , card . readEEPROM ( address ) ) id = card . FDXBIDEncode ( args [ 0 ] , args [ 1 ] , args [ 2 ] ) if card . tagtype = = card . Q5 or card . tagtype = = card . HITAG2 : x = string . upper ( raw _ input ( ' * * * Warning ! This will overwrite TAG ! Proceed ( y / n ) ? ' ) ) x = raw _ input ( ' Incompatible TAG ! Hit < RETURN > to retry . . . ' ) outbin + = chr ( int ( out [ x : x + 8 ] , 2 ) ) outhex [ x / 4 + 1 ] = card . ToHex ( outbin [ x : x + 4 ] ) h2control = card . HITAG2 _ PUBLIC _ B + card . HITAG2 _ TRANSPORT _ TAG print ' Usage : ' + sys . argv [ 0 ] + ' [ OPTIONS ] < ID > [ WRITE ] | < APPID > < COUNTRY CODE > < NATIONAL ID > [ WRITE ] ' print ' \ tNote : Application ID 8000 is \ ' Animal \ ' , and 0000 is non - Animal . ' 