print " Couldn ' t open reader ! " os . _ exit ( True ) card . info ( ' cardselect v0 . 1m ' ) if len ( args ) = = 1 : card . settagtype ( card . ALL ) print ' Card ID : ' + card . uid print ' ATR : ' + card . pcsc _ atr os . _ exit ( True ) os . _ exit ( False ) print " Couldn ' t open reader ! " os . _ exit ( True ) card . info ( ' copytag v0 . 1d ' ) print ' \ nID : ' + card . uid if card . readblock ( x ) : sys . stdout . flush ( ) buffer . append ( card . data ) print ' \ nRead % d blocks ' % x card . waitfortag ( ' Waiting for blank tag . . . ' ) print ' ID : ' + card . uid if card . tagtype ! = targettype : if not card . readblock ( 0 ) : os . _ exit ( False ) sys . stdout . flush ( ) os . _ exit ( True ) print ' OK \ r ' , sys . stdout . flush ( ) os . _ exit ( False ) os . _ exit ( True ) print " Couldn ' t open reader ! " os . _ exit ( False ) print " Couldn ' t open reader ! " os . _ exit ( True ) card . info ( ' eeprom v0 . 1e ' ) os . _ exit ( True ) card . info ( ' fdxbnum v0 . 1f ' ) if len ( args ) = = 2 : if args [ 1 ] = = ' WRITE ' : os . _ exit ( True ) os . _ exit ( False ) id = args [ 0 ] out = card . FDXBID128Bit ( id ) card . settagtype ( card . Q5 ) if not card . tagtype = = card . Q5 : card . settagtype ( card . ALL ) card . waitfortag ( ' Waiting for blank tag . . . ' ) print ' Tag ID : ' + card . data os . _ exit ( False ) if card . tagtype = = card . Q5 : if card . tagtype = = card . HITAG2 : print " Writing block % 02x : " % x , card . settagtype ( card . EM4x05 ) print ' Card ID : ' + card . data os . _ exit ( True ) card . settagtype ( card . EM4x05 ) print ' Card ID : ' + card . data print outhex [ x - offset ] card . settagtype ( card . ALL ) os . _ exit ( False ) print ' \ tand a decimal National ID Number will generate a 16 HEX digit ID . ' print ' \ tIf the WRITE option is specified , a Q5 or Hitag2 will be programmed to emulate FDX - B . ' os . _ exit ( True ) 