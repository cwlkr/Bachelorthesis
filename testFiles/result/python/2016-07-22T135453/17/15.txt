os . _ exit ( True ) if len ( args ) = = 1 : if card . select ( ) : print ' Card ID : ' + card . uid if card . readertype = = card . READER _ PCSC : if card . errorcode : os . _ exit ( True ) os . _ exit ( False ) os . _ exit ( True ) print ' \ nID : ' + card . uid if x > 0 : print ' \ nRead % d blocks ' % x if card . tagtype ! = targettype : os . _ exit ( False ) print ' \ nWrite failed ! ' print ' \ n Verifying : ' print ' \ nVerify failed ! ' os . _ exit ( True ) os . _ exit ( False ) os . _ exit ( True ) os . _ exit ( False ) os . _ exit ( True ) while address < 0xf0 : os . _ exit ( True ) if len ( args ) = = 2 : os . _ exit ( True ) os . _ exit ( False ) if card . readertype = = card . READER _ ACG : if card . readertype = = card . READER _ ACG : print ' Tag ID : ' + card . data if card . tagtype = = card . Q5 or card . tagtype = = card . HITAG2 : os . _ exit ( False ) q5control = ' 6000F0E8 ' print outhex [ x / 4 + 1 ] print outhex [ x ] if card . tagtype = = card . Q5 : if card . tagtype = = card . HITAG2 : if card . readertype = = card . READER _ ACG : print ' Card ID : ' + card . data if card . readertype = = card . READER _ FROSCH : print card . FROSCH _ Errors [ card . errorcode ] os . _ exit ( True ) print ' Card ID : ' + card . data print outhex [ x - offset ] if card . readertype = = card . READER _ ACG : os . _ exit ( False ) print ' \ tAlternatively , specifying a 4 HEX digit Application ID , 3 or 4 digit decimal country code ' os . _ exit ( True ) 