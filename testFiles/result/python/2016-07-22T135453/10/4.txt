# Adam Laurie < adam @ algroup . co . uk > # This code is copyright ( c ) Adam Laurie , 2006 , All rights reserved . # For non - commercial use only , the following terms apply - for all other card . info ( ' cardselect v0 . 1m ' ) card . settagtype ( args [ 0 ] ) card . settagtype ( card . ALL ) print ' ATR : ' + card . pcsc _ atr print ' ' + card . ISO7816ErrorCodes [ card . errorcode ] # Adam Laurie < adam @ algroup . co . uk > # This code is copyright ( c ) Adam Laurie , 2006 , All rights reserved . # For non - commercial use only , the following terms apply - for all other card . info ( ' copytag v0 . 1d ' ) buffer . append ( card . data ) card . waitfortag ( ' Waiting for blank tag . . . ' ) print ' ID : ' + card . uid if not card . readblock ( 0 ) : if not card . writeblock ( n , buffer [ n ] ) : # Adam Laurie < adam @ algroup . co . uk > # This code is copyright ( c ) Adam Laurie , 2006 , All rights reserved . # For non - commercial use only , the following terms apply - for all other print ' Setting ID to : ' + args [ 0 ] # Adam Laurie < adam @ algroup . co . uk > # This code is copyright ( c ) Adam Laurie , 2006 , All rights reserved . # For non - commercial use only , the following terms apply - for all other card . info ( ' eeprom v0 . 1e ' ) print ' Station : \ t ' + card . station ( ) print ' Protocol : \ t ' + card . PCON ( ) print ' Protocol2 : \ t ' + card . PCON2 ( ) print ' Protocol3 : \ t ' + card . PCON3 ( ) # Adam Laurie < adam @ algroup . co . uk > # This code is copyright ( c ) Adam Laurie , 2006 , All rights reserved . # For non - commercial use only , the following terms apply - for all other card . info ( ' fdxbnum v0 . 1f ' ) card . FDXBIDPrint ( args [ 0 ] ) card . FDXBIDPrint ( args [ 0 ] [ 1 : ] ) out = card . FDXBID128Bit ( id ) card . settagtype ( card . Q5 ) if not card . tagtype = = card . Q5 : card . settagtype ( card . ALL ) card . waitfortag ( ' Waiting for blank tag . . . ' ) # carrier 32 ( 2 * 15 + 2 ) print ' Q5 Control Block : ' , print ' Hitag2 Control Block : ' , h2control = card . HITAG2 _ PUBLIC _ B + card . HITAG2 _ TRANSPORT _ TAG if not card . writeblock ( x , outhex [ x - offset ] ) : print ' Control : ' + outhex [ x - offset ] card . settagtype ( card . EM4x05 ) print ' Control : ' + outhex [ x - offset ] card . settagtype ( card . EM4x05 ) card . settagtype ( card . ALL ) 