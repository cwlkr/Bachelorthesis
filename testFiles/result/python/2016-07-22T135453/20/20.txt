# ! / usr / bin / python os . _ exit ( True ) if len ( args ) = = 1 : if card . select ( ) : print ' Card ID : ' + card . uid if card . errorcode : os . _ exit ( True ) os . _ exit ( False ) # ! / usr / bin / python os . _ exit ( True ) print ' \ nID : ' + card . uid for x in range ( 98 ) : if card . readblock ( x ) : print ' \ nRead % d blocks ' % x os . _ exit ( False ) for n in range ( x ) : print ' \ nWrite failed ! ' print ' \ n Verifying : ' for n in range ( x ) : print ' \ nVerify failed ! ' os . _ exit ( True ) os . _ exit ( False ) os . _ exit ( True ) # ! / usr / bin / python os . _ exit ( False ) # ! / usr / bin / python os . _ exit ( True ) while address < 0xf0 : # ! / usr / bin / python os . _ exit ( True ) if len ( args ) = = 2 : os . _ exit ( True ) os . _ exit ( False ) print ' Tag ID : ' + card . data os . _ exit ( False ) q5control = ' 6000F0E8 ' print outhex [ x / 4 + 1 ] print outhex [ x ] print ' Card ID : ' + card . data os . _ exit ( True ) print ' Card ID : ' + card . data print outhex [ x - offset ] os . _ exit ( False ) print ' \ tIf a single 16 HEX digit ID is provided , it will be decoded according to the FDX - B standard . ' print ' \ tAlternatively , specifying a 4 HEX digit Application ID , 3 or 4 digit decimal country code ' os . _ exit ( True ) 