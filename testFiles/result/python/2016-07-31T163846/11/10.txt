# http : / / rfidiot . org / if len ( args ) = = 1 : if card . select ( ) : print ' Card ID : ' + card . uid if card . readertype = = card . READER _ PCSC : if card . errorcode : # http : / / rfidiot . org / print ' \ nID : ' + card . uid for x in range ( 98 ) : if card . readblock ( x ) : if x > 0 : print ' \ nRead % d blocks ' % x if card . tagtype ! = targettype : for n in range ( x ) : for n in range ( x ) : # http : / / rfidiot . org / # eeprom . py - display reader ' s eeprom settings # http : / / rfidiot . org / while address < 0xf0 : # fdxbnum . py - generate / decode FDX - B EM4x05 compliant IDs # http : / / rfidiot . org / if len ( args [ 0 ] ) = = 16 : if len ( args ) = = 2 : if args [ 1 ] = = ' WRITE ' : if card . readertype = = card . READER _ ACG : if card . readertype = = card . READER _ ACG : print ' Tag ID : ' + card . data if card . tagtype = = card . Q5 or card . tagtype = = card . HITAG2 : if x = = ' N ' : if x = = ' Y ' : # rf / ? ( don ' t care ) - set to 00 print outhex [ x / 4 + 1 ] print outhex [ x ] if card . tagtype = = card . Q5 : if card . tagtype = = card . HITAG2 : if card . readertype = = card . READER _ ACG : print ' Card ID : ' + card . data if card . readertype = = card . READER _ FROSCH : print ' Card ID : ' + card . data print outhex [ x - offset ] if card . readertype = = card . READER _ ACG : print sys . argv [ 0 ] + ' - generate / decode FDX - B EM4x05 compliant IDs ' 