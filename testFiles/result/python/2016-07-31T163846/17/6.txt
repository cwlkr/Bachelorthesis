# Adam Laurie < adam @ algroup . co . uk > card . info ( ' cardselect v0 . 1m ' ) if card . readertype = = card . READER _ PCSC : print ' ATR : ' + card . pcsc _ atr print ' ' + card . ISO7816ErrorCodes [ card . errorcode ] # Adam Laurie < adam @ algroup . co . uk > card . info ( ' copytag v0 . 1d ' ) card . waitfortag ( ' Waiting for blank tag . . . ' ) if not card . writeblock ( n , buffer [ n ] ) : # Adam Laurie < adam @ algroup . co . uk > print ' Setting ID to : ' + args [ 0 ] # Adam Laurie < adam @ algroup . co . uk > card . info ( ' eeprom v0 . 1e ' ) print ' Station : \ t ' + card . station ( ) print ' Protocol : \ t ' + card . PCON ( ) print ' Protocol2 : \ t ' + card . PCON2 ( ) print ' Protocol3 : \ t ' + card . PCON3 ( ) # Adam Laurie < adam @ algroup . co . uk > card . info ( ' fdxbnum v0 . 1f ' ) card . FDXBIDPrint ( args [ 0 ] [ 1 : ] ) if card . readertype = = card . READER _ ACG : if card . readertype = = card . READER _ ACG : card . waitfortag ( ' Waiting for blank tag . . . ' ) # carrier 32 ( 2 * 15 + 2 ) h2control = card . HITAG2 _ PUBLIC _ B + card . HITAG2 _ TRANSPORT _ TAG if card . readertype = = card . READER _ ACG : card . login ( ' ' , ' ' , card . HITAG2 _ TRANSPORT _ RWD ) if not card . writeblock ( x , outhex [ x - offset ] ) : print ' Control : ' + outhex [ x - offset ] if card . readertype = = card . READER _ FROSCH : print ' Control : ' + outhex [ x - offset ] if card . readertype = = card . READER _ ACG : 