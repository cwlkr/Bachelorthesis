try : card = rfidiot . card except : args = rfidiot . args else : else : else : print ' No card present ' try : card = rfidiot . card except : card . select ( ) print ' Reading : ' buffer = [ ] card . select ( ) sys . stdout . flush ( ) else : if x = = 0 : targettype = card . tagtype while 42 : else : print ' Writing : ' sys . stdout . flush ( ) print ' \ nWrite failed ! ' print ' \ n Verifying : ' print ' \ nVerify failed ! ' print ' OK \ r ' , sys . stdout . flush ( ) else : print ' No data ! ' try : card = rfidiot . card except : args = rfidiot . args try : card = rfidiot . card except : address = 0 address + = 1 try : card = rfidiot . card except : args = rfidiot . args help = rfidiot . help precoded = False print " Decode : " else : precoded = True else : else : id = args [ 0 ] else : print " Encode : " , print ' binary is ' , out card . select ( ) else : writetag = True else : writetag = False outbin = ' ' if writetag = = True : outhex [ 0 ] = q5control offset = 0 outhex [ 0 ] = h2control offset = 3 if x = = offset : print ' Done ! ' card . select ( ) else : print ' Write failed ! ' else : if x = = offset : print ' Done ! ' card . reset ( ) card . select ( ) else : print ' \ tIf a single 16 HEX digit ID is provided , it will be decoded according to the FDX - B standard . ' print ' \ tMaximum value for country code is 999 according to the standard , but 4 digits will work . ' print ' \ tMaximum value for National ID is 274877906943 . ' print ' \ tIf the WRITE option is specified , a Q5 or Hitag2 will be programmed to emulate FDX - B . ' 