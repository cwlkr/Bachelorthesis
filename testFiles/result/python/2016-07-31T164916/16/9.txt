# ! / usr / bin / python os . _ exit ( True ) if card . select ( ) : print ' No card present ' os . _ exit ( True ) os . _ exit ( False ) # ! / usr / bin / python os . _ exit ( True ) print ' Reading : ' if card . readblock ( x ) : os . _ exit ( False ) print ' Writing : ' for n in range ( x ) : for n in range ( x ) : os . _ exit ( True ) print ' OK \ r ' , os . _ exit ( False ) os . _ exit ( True ) # ! / usr / bin / python os . _ exit ( False ) # ! / usr / bin / python os . _ exit ( True ) # ! / usr / bin / python os . _ exit ( True ) print " Decode : " os . _ exit ( True ) os . _ exit ( False ) print " Encode : " , os . _ exit ( False ) print outhex [ x / 4 + 1 ] print ' Done ! ' print card . FROSCH _ Errors [ card . errorcode ] os . _ exit ( True ) print ' Done ! ' print outhex [ x - offset ] os . _ exit ( False ) os . _ exit ( True ) 