# ! / usr / bin / python # http : / / rfidiot . org / os . _ exit ( True ) if len ( args ) = = 1 : if card . select ( ) : if card . errorcode : print ' No card present ' os . _ exit ( True ) os . _ exit ( False ) # ! / usr / bin / python # http : / / rfidiot . org / os . _ exit ( True ) print ' Reading : ' for x in range ( 98 ) : if card . readblock ( x ) : if x > 0 : os . _ exit ( False ) print ' Writing : ' for n in range ( x ) : print ' \ nWrite failed ! ' print ' \ n Verifying : ' for n in range ( x ) : print ' \ nVerify failed ! ' os . _ exit ( True ) print ' OK \ r ' , os . _ exit ( False ) os . _ exit ( True ) # ! / usr / bin / python # http : / / rfidiot . org / os . _ exit ( False ) # ! / usr / bin / python # http : / / rfidiot . org / os . _ exit ( True ) # ! / usr / bin / python # fdxbnum . py - generate / decode FDX - B EM4x05 compliant IDs # http : / / rfidiot . org / os . _ exit ( True ) print " Decode : " if len ( args ) = = 2 : os . _ exit ( True ) os . _ exit ( False ) print " Encode : " , os . _ exit ( False ) # rf / ? ( don ' t care ) - set to 00 print ' Q5 Control Block : ' , print outhex [ x / 4 + 1 ] print ' Hitag2 Control Block : ' , print ' Done ! ' print card . FROSCH _ Errors [ card . errorcode ] os . _ exit ( True ) print ' Done ! ' print outhex [ x - offset ] os . _ exit ( False ) os . _ exit ( True ) 