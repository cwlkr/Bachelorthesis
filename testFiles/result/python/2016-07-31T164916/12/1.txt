os . _ exit ( True ) if len ( args ) = = 1 : if card . select ( ) : print ' ATR : ' + card . pcsc _ atr os . _ exit ( True ) os . _ exit ( False ) print " Couldn ' t open reader ! " os . _ exit ( True ) print ' Reading : ' for x in range ( 98 ) : if card . readblock ( x ) : print ' ID : ' + card . uid os . _ exit ( False ) print ' Writing : ' for n in range ( x ) : for n in range ( x ) : os . _ exit ( True ) print ' OK \ r ' , os . _ exit ( False ) os . _ exit ( True ) print " Couldn ' t open reader ! " os . _ exit ( False ) print ' Setting ID to : ' + args [ 0 ] print " Couldn ' t open reader ! " os . _ exit ( True ) print ' Station : \ t ' + card . station ( ) print ' Protocol : \ t ' + card . PCON ( ) print ' Protocol2 : \ t ' + card . PCON2 ( ) print ' Protocol3 : \ t ' + card . PCON3 ( ) os . _ exit ( True ) print " Decode : " if len ( args [ 0 ] ) = = 16 : if len ( args ) = = 2 : if args [ 1 ] = = ' WRITE ' : os . _ exit ( True ) os . _ exit ( False ) if not help and ( len ( args ) > = 3 or precoded ) : print " Encode : " , os . _ exit ( False ) for x in range ( 0 , len ( out ) , 8 ) : for x in range ( 0 , len ( outbin ) , 4 ) : print outhex [ x / 4 + 1 ] for x in range ( 1 , 5 , 1 ) : print ' Control : ' + outhex [ x - offset ] print ' Done ! ' print card . FROSCH _ Errors [ card . errorcode ] os . _ exit ( True ) print ' Control : ' + outhex [ x - offset ] print ' Done ! ' print outhex [ x - offset ] os . _ exit ( False ) os . _ exit ( True ) 