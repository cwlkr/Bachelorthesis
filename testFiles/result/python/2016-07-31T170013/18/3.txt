card = rfidiot . card print " Couldn ' t open reader ! " args = rfidiot . args card . info ( ' cardselect v0 . 1m ' ) card . settagtype ( args [ 0 ] ) card . settagtype ( card . ALL ) print ' ATR : ' + card . pcsc _ atr card = rfidiot . card print " Couldn ' t open reader ! " card . info ( ' copytag v0 . 1d ' ) card . select ( ) print ' Reading : ' card . select ( ) sys . stdout . flush ( ) buffer . append ( card . data ) targettype = card . tagtype card . waitfortag ( ' Waiting for blank tag . . . ' ) print ' ID : ' + card . uid if not card . readblock ( 0 ) : print ' Writing : ' sys . stdout . flush ( ) if not card . writeblock ( n , buffer [ n ] ) : sys . stdout . flush ( ) card = rfidiot . card print " Couldn ' t open reader ! " args = rfidiot . args card = rfidiot . card print " Couldn ' t open reader ! " card . info ( ' eeprom v0 . 1e ' ) print ' Station : \ t ' + card . station ( ) print ' Protocol : \ t ' + card . PCON ( ) print ' Protocol2 : \ t ' + card . PCON2 ( ) print ' Protocol3 : \ t ' + card . PCON3 ( ) card = rfidiot . card args = rfidiot . args help = rfidiot . help card . info ( ' fdxbnum v0 . 1f ' ) print " Decode : " card . FDXBIDPrint ( args [ 0 ] ) card . FDXBIDPrint ( args [ 0 ] [ 1 : ] ) id = args [ 0 ] print " Encode : " , out = card . FDXBID128Bit ( id ) card . settagtype ( card . Q5 ) card . select ( ) if not card . tagtype = = card . Q5 : card . settagtype ( card . ALL ) card . waitfortag ( ' Waiting for blank tag . . . ' ) x = string . upper ( raw _ input ( ' * * * Warning ! This will overwrite TAG ! Proceed ( y / n ) ? ' ) ) x = raw _ input ( ' Incompatible TAG ! Hit < RETURN > to retry . . . ' ) h2control = card . HITAG2 _ PUBLIC _ B + card . HITAG2 _ TRANSPORT _ TAG card . login ( ' ' , ' ' , card . HITAG2 _ TRANSPORT _ RWD ) if not card . writeblock ( x , outhex [ x - offset ] ) : print ' Control : ' + outhex [ x - offset ] print ' Done ! ' card . settagtype ( card . EM4x05 ) card . select ( ) print ' Control : ' + outhex [ x - offset ] print ' Done ! ' card . reset ( ) card . settagtype ( card . EM4x05 ) card . select ( ) card . settagtype ( card . ALL ) 