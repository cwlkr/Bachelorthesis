# ! / usr / bin / python os . _ exit ( True ) print ' Card ID : ' + card . uid if card . readertype = = card . READER _ PCSC : print ' ' + card . ISO7816ErrorCodes [ card . errorcode ] os . _ exit ( True ) os . _ exit ( False ) # ! / usr / bin / python os . _ exit ( True ) print ' \ nID : ' + card . uid for x in range ( 98 ) : print ' \ nRead % d blocks ' % x os . _ exit ( False ) for n in range ( x ) : print ' \ nWrite failed ! ' print ' \ n Verifying : ' for n in range ( x ) : print ' \ nVerify failed ! ' os . _ exit ( True ) os . _ exit ( False ) os . _ exit ( True ) # ! / usr / bin / python os . _ exit ( False ) # ! / usr / bin / python os . _ exit ( True ) # ! / usr / bin / python os . _ exit ( True ) if len ( args [ 0 ] ) = = 16 : if args [ 1 ] = = ' WRITE ' : print ' Unrecognised option : ' + args [ 1 ] os . _ exit ( True ) os . _ exit ( False ) if card . readertype = = card . READER _ ACG : if card . readertype = = card . READER _ ACG : print ' Tag ID : ' + card . data if x = = ' N ' : os . _ exit ( False ) if x = = ' Y ' : print outhex [ x / 4 + 1 ] for x in range ( 1 , 5 , 1 ) : if card . tagtype = = card . Q5 : if card . tagtype = = card . HITAG2 : if card . readertype = = card . READER _ ACG : print " Writing block % 02x : " % x , print ' Card ID : ' + card . data if card . readertype = = card . READER _ FROSCH : print card . FROSCH _ Errors [ card . errorcode ] os . _ exit ( True ) print ' Card ID : ' + card . data if card . readertype = = card . READER _ ACG : os . _ exit ( False ) print sys . argv [ 0 ] + ' - generate / decode FDX - B EM4x05 compliant IDs ' os . _ exit ( True ) 