print ' \ tMaximum value for country code is 999 according to the standard , but 4 digits will work . ' 
print ' \ tIf the WRITE option is specified , a Q5 or Hitag2 will be programmed to emulate FDX - B . ' 
print ' \ t ( normally based on ISO - 3166 country codes or ICAR . ORG manufacturer codes , range 0 - 4095 ) ' 
print ' \ tIf a single 16 HEX digit ID is provided , it will be decoded according to the FDX - B standard . ' 
print ' \ tAlternatively , specifying a 4 HEX digit Application ID , 3 or 4 digit decimal country code ' 
print ' Card ID : ' + card . data 
print outhex [ x - offset ] 
print outhex [ x / 4 + 1 ] 
print outhex [ x ] 
print ' \ nWrite failed ! ' 
print ' \ n Verifying : ' 
print ' Tag ID : ' + card . data 
print ' \ nVerify failed ! ' $
print ' \ nRead % d blocks ' % x 
print ' \ nID : ' + card . uid 
print ' Block % 02x : % s ' % ( n , buffer [ n ] ) , 
print card . demotag ( card . DT _ SET _ UID , card . ToBinary ( args [ 0 ] ) ) 
print ' address % 02x : \ t % s ' % ( address , card . readEEPROM ( address ) ) 
print ' Card ID : ' + card . uid 
print ' Q5 Control Block : ' , 
print ' Hitag2 Control Block : ' , 
print ' ID : ' + card . uid 
print ' ATR : ' + card . pcsc _ atr 
print ' Read error : ' , card . ISO7816ErrorCodes [ card . errorcode ] 
print ' Unrecognised option : ' + args [ 1 ] 
print " Writing block % 02x : " % x , 
print card . FROSCH _ Errors [ card . errorcode ] 
print ' Q5 Data Block % 02d : ' % ( x / 4 + 1 ) , 
print 
print ' \ tand a decimal National ID Number will generate a 16 HEX digit ID . ' 
print ' \ tMaximum value for National ID is 274877906943 . ' 
print ' No card present ' 
print ' Wrong blocksize ! ( % d / % d ) ' % ( len ( buffer [ 0 ] ) , len ( card . data ) ) , 
print ' Setting ID to : ' + args [ 0 ] 
print ' Station : \ t ' + card . station ( ) 
print ' Protocol : \ t ' + card . PCON ( ) 
print id 
print ' Protocol2 : \ t ' + card . PCON2 ( ) 
print ' Protocol3 : \ t ' + card . PCON3 ( ) 
print q5control 
print h2control 
print
print ' Block % 02x : % s \ r ' % ( x , card . data ) ,  
print ' ' + card . ISO7816ErrorCodes [ card . errorcode ] 
print ' Control : ' + outhex [ x - offset ] 
print sys . argv [ 0 ] + ' - generate / decode FDX - B EM4x05 compliant IDs ' 
print " Couldn ' t open reader ! " 
print " Couldn ' t open reader ! "
print ' Usage : ' + sys . argv [ 0 ] + ' [ OPTIONS ] < ID > [ WRITE ] | < APPID > < COUNTRY CODE > < NATIONAL ID > [ WRITE ] ' 
print ' Writing : ' 
print ' No data ! ' 
print " Decode : " 
print " Encode : " , 
print ' binary is ' , out
print ' Done ! ' 
print ' Write failed ! ' 
print ' Reading : ' 
print ' Hitag2 Data Block % 02d : ' % ( x + 3 ) , 
print ' Writing to tag type : ' + card . LFXTags [ card . tagtype ] 
print ' \ tNote : Application ID 8000 is \ ' Animal \ ' , and 0000 is non - Animal . ' 
print ' Block % 02x : % s \ r ' % ( n , buffer [ n ] ) , 
print ' OK \ r ' , 